/**
 * Google Apps Script –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets –∫–∞–∫ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
 * 
 * –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ:
 * 1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à—É Google —Ç–∞–±–ª–∏—Ü—É
 * 2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –†–∞—Å—à–∏—Ä–µ–Ω–∏—è -> Apps Script
 * 3. –£–¥–∞–ª–∏—Ç–µ –≤–µ—Å—å –∫–æ–¥ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç
 * 4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç (Ctrl+S)
 * 5. –ù–∞–∂–º–∏—Ç–µ "–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å" -> "–ù–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
 * 6. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø: "–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
 * 7. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ:
 *    - –û–ø–∏—Å–∞–Ω–∏–µ: "Survey Data API"
 *    - –ó–∞–ø—É—Å–∫ –æ—Ç –∏–º–µ–Ω–∏: "–û—Ç –º–æ–µ–≥–æ –∏–º–µ–Ω–∏"
 *    - –ö—Ç–æ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø: "–í—Å–µ"
 * 8. –ù–∞–∂–º–∏—Ç–µ "–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å"
 * 9. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

// ID –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü—ã (–±–µ—Ä–µ—Ç—Å—è –∏–∑ URL)
const SPREADSHEET_ID = '1PHrQ8ZwjrOc4_9QuvpQltuMpuSUGIlcb96lp6korbTA';
const SHEET_NAME = '–õ–∏—Å—Ç1';

// –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
const CATEGORY_NAMES = {
  'maintenance': '–¢–û',
  'testing': '–ò—Å–ø—ã—Ç–∞–Ω–∏—è', 
  'audit': '–ê—É–¥–∏—Ç',
  'pnr': '–ü–ù–†',
  'safety': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
  'quality': '–ö–∞—á–µ—Å—Ç–≤–æ',
  'equipment': '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
  'process': '–ü—Ä–æ—Ü–µ—Å—Å—ã',
  'warranty': '–ì–∞—Ä–∞–Ω—Ç–∏—è',
  'other': '–î—Ä—É–≥–æ–µ'
};

// –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Ç—Ä–∏–∫
const METRIC_NAMES = {
  'design': '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
  'installation': '–ú–æ–Ω—Ç–∞–∂',
  'interaction': '–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ', 
  'documentation': '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è',
  'control': '–ö–æ–Ω—Ç—Ä–æ–ª—å',
  'other': '–î—Ä—É–≥–æ–µ'
};

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ GET –∑–∞–ø—Ä–æ—Å–æ–≤ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
 */
function doGet(e) {
  return ContentService
    .createTextOutput(JSON.stringify({
      status: 'success',
      message: 'Google Sheets API —Ä–∞–±–æ—Ç–∞–µ—Ç!',
      spreadsheetId: SPREADSHEET_ID,
      timestamp: new Date().toISOString(),
      userAgent: e.parameter.userAgent || 'Unknown'
    }))
    .setMimeType(ContentService.MimeType.JSON)
    .setHeaders({
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type'
    });
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ POST –∑–∞–ø—Ä–æ—Å–æ–≤
 */
function doPost(e) {
  try {
    // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ
    console.log('üì± –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å:', new Date().toISOString());
    console.log('üìã –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:', e.postData ? e.postData.contents : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
    
    // –ü–∞—Ä—Å–∏–º –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    if (!e.postData || !e.postData.contents) {
      throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–ø—Ä–æ—Å–µ');
    }
    
    const requestData = JSON.parse(e.postData.contents);
    const action = requestData.action;
    const data = requestData.data;
    
    console.log('üéØ –î–µ–π—Å—Ç–≤–∏–µ:', action);
    
    let result;
    
    switch(action) {
      case 'addSurvey':
        result = addSurveyData(data);
        break;
      case 'getSurveys':
        result = getAllSurveys();
        break;
      case 'createHeaders':
        result = createHeaders();
        break;
      default:
        throw new Error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ' + action);
    }
    
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    
    return ContentService
      .createTextOutput(JSON.stringify({
        status: 'success',
        result: result,
        timestamp: new Date().toISOString()
      }))
      .setMimeType(ContentService.MimeType.JSON)
      .setHeaders({
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'GET,POST,OPTIONS',
        'Access-Control-Allow-Headers': 'Content-Type'
      });
      
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:', error.toString());
    
    return ContentService
      .createTextOutput(JSON.stringify({
        status: 'error',
        message: error.toString(),
        timestamp: new Date().toISOString()
      }))
      .setMimeType(ContentService.MimeType.JSON)
      .setHeaders({
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'GET,POST,OPTIONS',
        'Access-Control-Allow-Headers': 'Content-Type'
      });
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ OPTIONS –∑–∞–ø—Ä–æ—Å–æ–≤ (–¥–ª—è CORS)
 */
function doOptions(e) {
  return ContentService
    .createTextOutput('')
    .setHeaders({
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type'
    });
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏ –æ–ø—Ä–æ—Å–∞
 */
function addSurveyData(data) {
  try {
    console.log('üìù –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–ø—Ä–æ—Å–∞...');
    console.log('üìã –î–∞–Ω–Ω—ã–µ:', JSON.stringify(data, null, 2));
    
    const sheet = SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName(SHEET_NAME);
    
    if (!sheet) {
      throw new Error('–õ–∏—Å—Ç "' + SHEET_NAME + '" –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    // –í–°–ï–ì–î–ê –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    const lastRow = sheet.getLastRow();
    console.log('üìä –¢–µ–∫—É—â–∞—è –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞:', lastRow);
    
    if (lastRow === 0) {
      console.log('üìä –õ–∏—Å—Ç –ø—É—Å—Ç–æ–π, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏...');
      createHeaders();
    } else {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
      const firstRowValues = sheet.getRange(1, 1, 1, 8).getValues()[0];
      const hasHeaders = firstRowValues[0] && (
        firstRowValues[0].toString().includes('–î–∞—Ç–∞') || 
        firstRowValues[0].toString().includes('–≤—Ä–µ–º—è') ||
        firstRowValues[0] === '–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è'
      );
      
      if (!hasHeaders) {
        console.log('üìä –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, —Å–æ–∑–¥–∞–µ–º...');
        // –í—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ –Ω–∞—á–∞–ª–æ
        sheet.insertRowBefore(1);
        createHeaders();
      }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if (!data.timestamp) {
      data.timestamp = new Date().toLocaleString('ru-RU');
    }
    
    // –ü–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–∏–π
    const categoryRussian = CATEGORY_NAMES[data.category] || data.category;
    const metricRussian = METRIC_NAMES[data.metric] || data.metric;
    
    console.log('üîÑ –ü–µ—Ä–µ–≤–æ–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', data.category, '‚Üí', categoryRussian);
    console.log('üîÑ –ü–µ—Ä–µ–≤–æ–¥–∏–º –º–µ—Ç—Ä–∏–∫—É:', data.metric, '‚Üí', metricRussian);
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
    const row = [
      data.timestamp,
      data.title || '',
      categoryRussian,
      metricRussian,
      data.description || '',
      data.imageBase64 || '', // URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ base64
      data.authorId || '',
      data.authorName || ''
    ];
    
    console.log('üìù –ì–æ—Ç–æ–≤–∏–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏...');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Ç–∞–±–ª–∏—Ü—É
    sheet.appendRow(row);
    
    const rowNumber = sheet.getLastRow();
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å—Ç—Ä–æ–∫—É:', rowNumber);
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (URL), –¥–µ–ª–∞–µ–º —è—á–µ–π–∫—É –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π
    if (data.imageBase64 && data.imageBase64.startsWith('http')) {
      try {
        const imageCell = sheet.getRange(rowNumber, 6); // –°—Ç–æ–ª–±–µ—Ü F (—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è)
        imageCell.setFormula('=HYPERLINK("' + data.imageBase64 + '","üñºÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ")');
        console.log('üñºÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
      } catch (linkError) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', linkError.toString());
      }
    }
    
    return {
      message: '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã',
      rowNumber: rowNumber,
      timestamp: new Date().toISOString(),
      categoryRussian: categoryRussian,
      metricRussian: metricRussian,
      hasHeaders: true
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error.toString());
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É: ' + error.toString());
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å–æ–≤
 */
function getAllSurveys() {
  const sheet = SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName(SHEET_NAME);
  const lastRow = sheet.getLastRow();
  
  if (lastRow <= 1) {
    return [];
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –∫—Ä–æ–º–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
  const data = sheet.getRange(2, 1, lastRow - 1, 8).getValues();
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤
  return data.map(row => ({
    timestamp: row[0],
    title: row[1],
    category: row[2],
    metric: row[3],
    description: row[4],
    imageUrl: row[5], // –¢–µ–ø–µ—Ä—å —ç—Ç–æ URL
    authorId: row[6],
    authorName: row[7]
  }));
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
 */
function createHeaders() {
  const sheet = SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName(SHEET_NAME);
  
  const headers = [
    '–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è',
    '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã',
    '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
    '–ú–µ—Ç—Ä–∏–∫–∞',
    '–û–ø–∏—Å–∞–Ω–∏–µ',
    '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
    'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
    '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
  ];
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  sheet.getRange(1, 1, 1, headers.length)
    .setFontWeight('bold')
    .setBackground('#4285f4')
    .setFontColor('#ffffff')
    .setHorizontalAlignment('center');
  
  // –ó–∞–º–æ—Ä–∞–∂–∏–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
  sheet.setFrozenRows(1);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç–æ–ª–±—Ü–æ–≤
  sheet.setColumnWidth(1, 150); // –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
  sheet.setColumnWidth(2, 200); // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
  sheet.setColumnWidth(3, 120); // –ö–∞—Ç–µ–≥–æ—Ä–∏—è
  sheet.setColumnWidth(4, 120); // –ú–µ—Ç—Ä–∏–∫–∞
  sheet.setColumnWidth(5, 300); // –û–ø–∏—Å–∞–Ω–∏–µ
  sheet.setColumnWidth(6, 200); // –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è
  sheet.setColumnWidth(7, 100); // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  sheet.setColumnWidth(8, 150); // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  
  return {
    message: '–ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å–æ–∑–¥–∞–Ω—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ',
    headers: headers
  };
}

/**
 * –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞
 */
function test() {
  const testData = {
    title: '–¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–æ–±–ª–µ–º–∞',
    category: 'maintenance',
    metric: 'control',
    description: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã',
    imageBase64: 'https://example.com/image.jpg',
    authorId: 'test-user-123',
    authorName: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤'
  };
  
  const result = addSurveyData(testData);
  console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:', result);
} 