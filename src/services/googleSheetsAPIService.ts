// –ü—Ä–æ—Å—Ç–æ–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π API
// –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å Google Apps Script Web App

interface SurveyData {
  title: string;
  category: string;
  metric: string;
  description: string;
  imageBase64?: string; // –¢–µ–ø–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∞ –Ω–µ base64
  timestamp?: string;
  authorId?: string;
  authorName?: string;
}

class GoogleSheetsAPIService {
  private spreadsheetId: string = '1PHrQ8ZwjrOc4_9QuvpQltuMpuSUGIlcb96lp6korbTA';
  private sheetName: string = '–õ–∏—Å—Ç1';
  
  // URL –¥–ª—è Google Apps Script Web App (–Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å)
  // –ü—Ä–∏–º–µ—Ä: https://script.google.com/macros/s/YOUR_SCRIPT_ID/exec
  private webAppUrl: string = '';

  /**
   * –î–æ–±–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å–∞ –≤ Google Sheets —á–µ—Ä–µ–∑ Web App
   */
  async addSurveyData(data: SurveyData): Promise<boolean> {
    try {
      // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
      if (!data.timestamp) {
        data.timestamp = new Date().toLocaleString('ru-RU');
      }

      // –ï—Å–ª–∏ Web App URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
      if (!this.webAppUrl) {
        console.warn('‚ö†Ô∏è Google Apps Script Web App URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ª–æ–∫–∞–ª—å–Ω–æ.');
        return this.saveToLocalStorage(data);
      }

      console.log('üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:', /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ? '–ú–æ–±–∏–ª—å–Ω–æ–µ' : '–î–µ—Å–∫—Ç–æ–ø');
      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ URL:', this.webAppUrl);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –Ω–∞ Web App —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
      const response = await fetch(this.webAppUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          action: 'addSurvey',
          data: data
        }),
        // –£–±–∏—Ä–∞–µ–º mode: 'no-cors' –¥–ª—è –ª—É—á—à–µ–π –æ—Ç–ª–∞–¥–∫–∏
      });

      console.log('üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status, response.statusText);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞
      if (response.ok) {
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Google Sheets');
        return true;
      } else {
        throw new Error(`HTTP Error: ${response.status} ${response.statusText}`);
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Sheets:', error);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ –∫–∞–∫ fallback
      console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
      return this.saveToLocalStorage(data);
    }
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ localStorage –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
   */
  private saveToLocalStorage(data: SurveyData): boolean {
    try {
      const storageKey = 'survey_data_queue';
      const existingData = localStorage.getItem(storageKey);
      const queue = existingData ? JSON.parse(existingData) : [];
      
      queue.push(data);
      localStorage.setItem(storageKey, JSON.stringify(queue));
      
      console.log('üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:', error);
      return false;
    }
  }

  /**
   * –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å Google Sheets
   */
  async syncLocalData(): Promise<void> {
    if (!this.webAppUrl) {
      console.warn('‚ö†Ô∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞: Web App URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      return;
    }

    try {
      const storageKey = 'survey_data_queue';
      const existingData = localStorage.getItem(storageKey);
      
      if (!existingData) {
        console.log('‚úÖ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
        return;
      }

      const queue = JSON.parse(existingData);
      console.log(`üì§ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è ${queue.length} –∑–∞–ø–∏—Å–µ–π...`);

      for (const data of queue) {
        await this.addSurveyData(data);
      }

      // –û—á–∏—â–∞–µ–º –æ—á–µ—Ä–µ–¥—å –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      localStorage.removeItem(storageKey);
      console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
   */
  getUnsyncedCount(): number {
    try {
      const storageKey = 'survey_data_queue';
      const existingData = localStorage.getItem(storageKey);
      
      if (!existingData) return 0;
      
      const queue = JSON.parse(existingData);
      return queue.length;
    } catch {
      return 0;
    }
  }

  /**
   * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç URL –¥–ª—è Web App
   */
  setWebAppUrl(url: string): void {
    this.webAppUrl = url;
    console.log('‚úÖ Web App URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω:', url);
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º singleton —ç–∫–∑–µ–º–ø–ª—è—Ä
export const googleSheetsAPIService = new GoogleSheetsAPIService();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø
export type { SurveyData }; 