import React, { useState, useEffect } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import { cloudDataService } from '../../services/cloudDataService';

const Header: React.FC = () => {
  const { currentUser, logout } = useAuth();
  const [userStats, setUserStats] = useState({
    displayName: '',
    totalPoints: 0,
    totalProblems: 0,
    level: 'novice' as 'novice' | 'fighter' | 'master'
  });
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (currentUser) {
      loadUserStats();
      
      // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
      const handleStatsUpdate = () => {
        loadUserStats();
      };
      
      window.addEventListener('userStatsUpdated', handleStatsUpdate);
      
      return () => {
        window.removeEventListener('userStatsUpdated', handleStatsUpdate);
      };
    } else {
      setLoading(false);
    }
  }, [currentUser]);

  const loadUserStats = async () => {
    if (!currentUser) {
      setLoading(false);
      return;
    }

    try {
      setLoading(true);
      
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Firebase
      const stats = await cloudDataService.getUserStats(currentUser.uid);
      const displayName = await cloudDataService.getUserDisplayName(currentUser.uid, currentUser.email || '');
      
      setUserStats({
        displayName,
        totalPoints: stats.totalPoints,
        totalProblems: stats.totalProblems,
        level: stats.level
      });
      
      console.log('‚úÖ Header: –ó–∞–≥—Ä—É–∂–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Firebase:', stats);
      
    } catch (error) {
      console.error('‚ùå Header: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      setUserStats({
        displayName: currentUser.email?.split('@')[0] || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        totalPoints: 0,
        totalProblems: 0,
        level: 'novice'
      });
    } finally {
      setLoading(false);
    }
  };

  const getLevelInfo = (level: string) => {
    switch (level) {
      case 'master':
        return { name: '–ú–∞—Å—Ç–µ—Ä', emoji: 'üß†', color: 'text-violet-600' };
      case 'fighter':
        return { name: '–ë–æ–µ—Ü', emoji: 'üõ†Ô∏è', color: 'text-amber-600' };
      default:
        return { name: '–ù–æ–≤–∏—á–æ–∫', emoji: 'üèÅ', color: 'text-green-600' };
    }
  };

  const handleLogout = async () => {
    try {
      await logout();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error);
    }
  };

  const handleRefreshStats = () => {
    loadUserStats();
  };

  if (!currentUser) {
    return (
      <header className="bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center">
              <h1 className="text-xl font-bold text-gray-900">
                üèÜ Problem Tracker
              </h1>
            </div>
            <div className="text-sm text-gray-600">
              –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É
            </div>
          </div>
        </div>
      </header>
    );
  }

  const levelInfo = getLevelInfo(userStats.level);

  return (
    <header className="bg-white shadow-sm border-b border-gray-200">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          {/* –õ–æ–≥–æ—Ç–∏–ø */}
          <div className="flex items-center">
            <h1 className="text-xl font-bold text-gray-900">
              üèÜ Problem Tracker
            </h1>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
          <div className="flex items-center space-x-4">
            {loading ? (
              <div className="flex items-center space-x-2">
                <div className="animate-spin h-4 w-4 border-2 border-blue-600 border-t-transparent rounded-full"></div>
                <span className="text-sm text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
              </div>
            ) : (
              <>
                {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                <div className="hidden sm:flex items-center space-x-4 text-sm">
                  <div className="flex items-center space-x-2">
                    <span className={`${levelInfo.color} font-medium`}>
                      {levelInfo.emoji} {levelInfo.name}
                    </span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <span className="text-gray-600">–ë–∞–ª–ª—ã:</span>
                    <span className="font-semibold text-blue-600">{userStats.totalPoints}</span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <span className="text-gray-600">–ü—Ä–æ–±–ª–µ–º:</span>
                    <span className="font-semibold text-gray-900">{userStats.totalProblems}</span>
                  </div>
                </div>

                {/* –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
                <button
                  onClick={handleRefreshStats}
                  className="p-2 text-gray-600 hover:text-blue-600 transition-colors"
                  title="–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
                >
                  üîÑ
                </button>

                {/* –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                <div className="flex items-center space-x-3">
                  <div className="text-right">
                    <div className="text-sm font-medium text-gray-900">
                      {userStats.displayName}
                    </div>
                    <div className="text-xs text-gray-500">
                      {currentUser.email}
                    </div>
                  </div>
                  
                  {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
                  <button
                    onClick={handleLogout}
                    className="bg-red-600 hover:bg-red-700 text-white text-sm font-medium py-2 px-4 rounded-lg transition-colors"
                  >
                    –í—ã–π—Ç–∏
                  </button>
                </div>
              </>
            )}
          </div>
        </div>

        {/* –ú–æ–±–∏–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        {!loading && (
          <div className="sm:hidden pb-3 flex items-center justify-center space-x-4 text-sm">
            <span className={`${levelInfo.color} font-medium`}>
              {levelInfo.emoji} {levelInfo.name}
            </span>
            <span className="text-gray-600">
              –ë–∞–ª–ª—ã: <span className="font-semibold text-blue-600">{userStats.totalPoints}</span>
            </span>
            <span className="text-gray-600">
              –ü—Ä–æ–±–ª–µ–º: <span className="font-semibold text-gray-900">{userStats.totalProblems}</span>
            </span>
          </div>
        )}
      </div>
    </header>
  );
};

export default Header; 