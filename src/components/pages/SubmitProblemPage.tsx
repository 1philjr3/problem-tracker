import React, { useState } from 'react';
import { cloudDataService } from '../../services/cloudDataService';
import { useAuth } from '../../contexts/AuthContext';

const categories = [
  '–¢–û',
  '–ò—Å–ø—ã—Ç–∞–Ω–∏—è', 
  '–ê—É–¥–∏—Ç',
  '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
  '–ö–∞—á–µ—Å—Ç–≤–æ',
  '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
  '–ü—Ä–æ—Ü–µ—Å—Å—ã',
  '–î—Ä—É–≥–æ–µ'
];

const SubmitProblemPage: React.FC = () => {
  const { currentUser } = useAuth();
  const [title, setTitle] = useState('');
  const [description, setDescription] = useState('');
  const [category, setCategory] = useState('');
  const [images, setImages] = useState<File[]>([]);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [successMessage, setSuccessMessage] = useState('');

  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {
    const files = Array.from(e.target.files || []);
    const validFiles = files.filter(file => {
      const isValidType = file.type.startsWith('image/');
      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB
      return isValidType && isValidSize;
    });
    
    if (validFiles.length + images.length > 5) {
      alert('–ú–∞–∫—Å–∏–º—É–º 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
      return;
    }
    
    setImages(prev => [...prev, ...validFiles]);
  };

  const removeImage = (index: number) => {
    setImages(prev => prev.filter((_, i) => i !== index));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!currentUser) {
      alert('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É');
      return;
    }

    if (!title.trim() || !description.trim() || !category) {
      alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
      return;
    }

    setIsSubmitting(true);
    setSuccessMessage('');

    try {
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const imagePromises = images.map(async (image) => {
        const imageName = await cloudDataService.saveImage(image);
        return imageName;
      });
      const imageNames = await Promise.all(imagePromises);

      // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const displayName = await cloudDataService.getUserDisplayName(
        currentUser.uid, 
        currentUser.email || ''
      );

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
      await cloudDataService.saveUser({
        id: currentUser.uid,
        email: currentUser.email || '',
        fullName: displayName,
        joinedAt: new Date().toISOString(),
        lastActive: new Date().toISOString(),
      });

      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É
      const problem = await cloudDataService.addProblem({
        title: title.trim(),
        description: description.trim(),
        category,
        authorId: currentUser.uid,
        authorName: displayName,
        images: imageNames,
      });

      console.log('‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∞:', problem);

      setSuccessMessage('üéâ –ü—Ä–æ–±–ª–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –í—ã –ø–æ–ª—É—á–∏–ª–∏ +1 –±–∞–ª–ª.');
      
      // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
      setTitle('');
      setDescription('');
      setCategory('');
      setImages([]);

      // –°–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => setSuccessMessage(''), 3000);

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–æ–±–ª–µ–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="max-w-2xl mx-auto p-6">
      <div className="bg-white rounded-lg shadow-lg p-6">
        <h1 className="text-2xl font-bold text-gray-900 mb-6">
          üìù –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ
        </h1>

        {successMessage && (
          <div className="mb-6 p-4 bg-green-100 border border-green-400 text-green-700 rounded">
            {successMessage}
          </div>
        )}

        <form onSubmit={handleSubmit} className="space-y-6">
          {/* –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã *
            </label>
            <input
              type="text"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã"
              required
            />
          </div>

          {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ *
            </label>
            <textarea
              value={description}
              onChange={(e) => setDescription(e.target.value)}
              rows={4}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–æ: —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –≥–¥–µ, –∫–æ–≥–¥–∞, –∫–∞–∫–∏–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è"
              required
            />
          </div>

          {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ö–∞—Ç–µ–≥–æ—Ä–∏—è *
            </label>
            <select
              value={category}
              onChange={(e) => setCategory(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              required
            >
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
              {categories.map(cat => (
                <option key={cat} value={cat}>{cat}</option>
              ))}
            </select>
          </div>

          {/* –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (–¥–æ 5 —à—Ç., –¥–æ 10 –ú–ë –∫–∞–∂–¥–∞—è)
            </label>
            <input
              type="file"
              multiple
              accept="image/*"
              onChange={handleImageUpload}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
            
            {images.length > 0 && (
              <div className="mt-3 space-y-2">
                {images.map((image, index) => (
                  <div key={index} className="flex items-center justify-between p-2 bg-gray-50 rounded">
                    <span className="text-sm text-gray-600">{image.name}</span>
                    <button
                      type="button"
                      onClick={() => removeImage(index)}
                      className="text-red-500 hover:text-red-700"
                    >
                      ‚úï
                    </button>
                  </div>
                ))}
              </div>
            )}
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
          <button
            type="submit"
            disabled={isSubmitting}
            className="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50"
          >
            {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É (+1 –±–∞–ª–ª)'}
          </button>
        </form>

        <div className="mt-6 p-4 bg-blue-50 rounded-lg">
          <h3 className="font-medium text-blue-900 mb-2">üí° –°–æ–≤–µ—Ç—ã –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:</h3>
          <ul className="text-sm text-blue-800 space-y-1">
            <li>‚Ä¢ –ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã –≤ –æ–ø–∏—Å–∞–Ω–∏–∏</li>
            <li>‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ –∏ –≤—Ä–µ–º—è</li>
            <li>‚Ä¢ –ü—Ä–∏–ª–æ–∂–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ</li>
            <li>‚Ä¢ –û–ø–∏—à–∏—Ç–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏</li>
            <li>‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–¥–µ–∏</li>
          </ul>
        </div>
      </div>
    </div>
  );
};

export default SubmitProblemPage; 