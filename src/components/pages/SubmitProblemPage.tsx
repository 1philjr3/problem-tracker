import React, { useState } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import { localDataService } from '../../services/localDataService';
import { googleSheetsAPIService } from '../../services/googleSheetsAPIService';
import { ref, uploadBytes, getDownloadURL } from 'firebase/storage';
import { storage } from '../../firebase';
import { doc, getDoc } from 'firebase/firestore';
import { db } from '../../firebase';

const SubmitProblemPage: React.FC = () => {
  const { currentUser } = useAuth();
  const [formData, setFormData] = useState({
    title: '',
    description: '',
    category: 'maintenance',
    metric: 'design'
  });
  const [images, setImages] = useState<File[]>([]);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isCompressing, setIsCompressing] = useState(false);

  const categories = [
    { value: 'maintenance', label: '–¢–û', emoji: 'üîß' },
    { value: 'testing', label: '–ò—Å–ø—ã—Ç–∞–Ω–∏—è', emoji: 'üß™' },
    { value: 'audit', label: '–ê—É–¥–∏—Ç', emoji: 'üîä' },
    { value: 'pnr', label: '–ü–ù–†', emoji: 'üè≠' },
    { value: 'safety', label: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', emoji: '‚ö†Ô∏è' },
    { value: 'quality', label: '–ö–∞—á–µ—Å—Ç–≤–æ', emoji: '‚úÖ' },
    { value: 'equipment', label: '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', emoji: '‚öôÔ∏è' },
    { value: 'process', label: '–ü—Ä–æ—Ü–µ—Å—Å—ã', emoji: 'üîÑ' },
    { value: 'warranty', label: '–ì–∞—Ä–∞–Ω—Ç–∏—è', emoji: 'üõ°Ô∏è' },
    { value: 'other', label: '–î—Ä—É–≥–æ–µ', emoji: 'üìù' },
  ];

  const metrics = [
    { value: 'design', label: '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', emoji: 'üìê' },
    { value: 'installation', label: '–ú–æ–Ω—Ç–∞–∂', emoji: 'üî®' },
    { value: 'interaction', label: '–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ', emoji: 'ü§ù' },
    { value: 'documentation', label: '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è', emoji: 'üìã' },
    { value: 'control', label: '–ö–æ–Ω—Ç—Ä–æ–ª—å', emoji: 'üîç' },
    { value: 'other', label: '–î—Ä—É–≥–æ–µ', emoji: 'üìù' },
  ];

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files) {
      const newFiles = Array.from(e.target.files);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤ (–º–∞–∫—Å 5MB)
      const maxSize = 5 * 1024 * 1024;
      const oversizedFiles = newFiles.filter(file => file.size > maxSize);
      if (oversizedFiles.length > 0) {
        alert('–†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 5MB');
        return;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–æ–≤
      const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];
      const invalidFiles = newFiles.filter(file => !allowedTypes.includes(file.type));
      if (invalidFiles.length > 0) {
        alert('–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–æ—Ä–º–∞—Ç—ã: JPEG, PNG, WebP');
        return;
      }
      
      setImages(prev => [...prev, ...newFiles].slice(0, 5)); // –ú–∞–∫—Å–∏–º—É–º 5 —Ñ–∞–π–ª–æ–≤
    }
  };

  const removeImage = (index: number) => {
    setImages(prev => prev.filter((_, i) => i !== index));
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const compressImage = (file: File, maxWidth: number = 1200, quality: number = 0.8): Promise<File> => {
    return new Promise((resolve) => {
      const canvas = document.createElement('canvas');
      const ctx = canvas.getContext('2d')!;
      const img = new Image();

      img.onload = () => {
        // –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–π
        let { width, height } = img;
        
        if (width > height) {
          if (width > maxWidth) {
            height = (height * maxWidth) / width;
            width = maxWidth;
          }
        } else {
          if (height > maxWidth) {
            width = (width * maxWidth) / height;
            height = maxWidth;
          }
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã canvas
        canvas.width = width;
        canvas.height = height;

        // –†–∏—Å—É–µ–º —Å–∂–∞—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        ctx.drawImage(img, 0, 0, width, height);

        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ blob
        canvas.toBlob(
          (blob) => {
            if (blob) {
              // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ —Å–∂–∞—Ç—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
              const compressedFile = new File([blob], file.name, {
                type: 'image/jpeg',
                lastModified: Date.now()
              });
              resolve(compressedFile);
            } else {
              resolve(file); // Fallback –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
            }
          },
          'image/jpeg',
          quality
        );
      };

      img.onerror = () => {
        resolve(file); // Fallback –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
      };

      img.src = URL.createObjectURL(file);
    });
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞ –≤ base64 (fallback –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö)
  const convertToBase64 = (file: File): Promise<string> => {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.onload = () => resolve(reader.result as string);
      reader.onerror = reject;
      reader.readAsDataURL(file);
    });
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Firebase Storage —Å fallback
  const uploadImageToStorage = async (file: File): Promise<string> => {
    try {
      // –°–∂–∏–º–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
      console.log('üì∑ –°–∂–∏–º–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...');
      const compressedFile = await compressImage(file);
      
      console.log(`üìä –†–∞–∑–º–µ—Ä –¥–æ —Å–∂–∞—Ç–∏—è: ${(file.size / 1024).toFixed(1)} KB`);
      console.log(`üìä –†–∞–∑–º–µ—Ä –ø–æ—Å–ª–µ —Å–∂–∞—Ç–∏—è: ${(compressedFile.size / 1024).toFixed(1)} KB`);
      
      const timestamp = Date.now();
      const fileName = `images/${timestamp}_compressed_${compressedFile.name}`;
      const imageRef = ref(storage, fileName);
      
      await uploadBytes(imageRef, compressedFile);
      const downloadURL = await getDownloadURL(imageRef);
      
      return downloadURL;
    } catch (error) {
      console.error('‚ùå Firebase Storage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º base64 fallback:', error);
      
      // Fallback –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
      try {
        const compressedFile = await compressImage(file);
        const base64 = await convertToBase64(compressedFile);
        console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤ base64 –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞');
        return base64;
      } catch (fallbackError) {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', fallbackError);
        throw fallbackError;
      }
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const getUserFullName = async (): Promise<string> => {
    if (!currentUser) return '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º displayName –∏–∑ Firebase Auth
    if (currentUser.displayName) {
      return currentUser.displayName;
    }

    // –ó–∞—Ç–µ–º –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ Firestore
    try {
      const userDoc = await getDoc(doc(db, 'users', currentUser.uid));
      if (userDoc.exists()) {
        const userData = userDoc.data();
        if (userData.fullName) {
          return userData.fullName;
        }
      }
    } catch (error) {
      console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ Firestore:', error);
    }

    // –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —á–∞—Å—Ç—å email
    if (currentUser.email) {
      return currentUser.email.split('@')[0];
    }
    
    return '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!currentUser) {
      alert('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É');
      return;
    }
    
    if (!formData.title.trim() || !formData.description.trim()) {
      alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
      return;
    }

    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Å fallback –Ω–∞ base64 –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö)
      let imageUrl = '';
      if (images.length > 0) {
        try {
          setIsCompressing(true);
          imageUrl = await uploadImageToStorage(images[0]);
          console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ:', imageUrl ? '–£—Å–ø–µ—à–Ω–æ' : '–ë–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
        } catch (error) {
          console.error('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', error);
          // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        } finally {
          setIsCompressing(false);
        }
      }

      setIsSubmitting(true);

      // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const displayName = await getUserFullName();

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Google Sheets —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
      try {
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Google Sheets...');
        await googleSheetsAPIService.addSurveyData({
          title: formData.title.trim(),
          category: formData.category,
          metric: formData.metric,
          description: formData.description.trim(),
          imageBase64: imageUrl,
          authorId: currentUser.uid,
          authorName: displayName
        });
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Google Sheets');
      } catch (sheetsError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Sheets:', sheetsError);
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        alert('‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets.');
      }

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö
      alert(`‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ "${formData.title}" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!`);
      
      // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
      setFormData({ title: '', description: '', category: 'maintenance', metric: 'design' });
      setImages([]);

      console.log('üéâ –ü—Ä–æ–±–ª–µ–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');

    } catch (error) {
      console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã:', error);
      alert('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setIsSubmitting(false);
      setIsCompressing(false);
    }
  };

  return (
    <div className="max-w-2xl mx-auto p-4 space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">
          üìù –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ
        </h1>
        <p className="text-gray-600">
          –û–ø–∏—à–∏—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É, –∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ
        </p>
      </div>

      {/* –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ê–Ø –ö–ù–û–ü–ö–ê - –£–î–ê–õ–ò–¢–¨ –ü–û–°–õ–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø */}
      <div className="bg-red-50 border border-red-200 rounded-lg p-4">
        <h3 className="font-semibold text-red-800 mb-2">üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê (–≤—Ä–µ–º–µ–Ω–Ω–æ)</h3>
        <button
          onClick={async () => {
            console.log('üß™ –¢–ï–°–¢–û–í–ê–Ø –û–¢–ü–†–ê–í–ö–ê –î–ê–ù–ù–´–•');
            try {
              const testData = {
                title: '–¢–ï–°–¢–û–í–ê–Ø –ü–†–û–ë–õ–ï–ú–ê',
                category: 'maintenance',
                metric: 'control',
                description: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –º–æ–±–∏–ª—å–Ω—ã–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏. –í—Ä–µ–º—è: ' + new Date().toLocaleString(),
                imageBase64: '',
                authorId: currentUser?.uid || 'test-user',
                authorName: currentUser?.displayName || '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
              };
              
              const result = await googleSheetsAPIService.addSurveyData(testData);
              alert(result ? '‚úÖ –¢–ï–°–¢ –ü–†–û–®–ï–õ!' : '‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–®–ï–õ');
            } catch (error) {
              console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
              alert('‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: ' + error);
            }
          }}
          className="w-full px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700"
        >
          üß™ –¢–ï–°–¢–û–í–ê–Ø –û–¢–ü–†–ê–í–ö–ê (–¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏)
        </button>
        <p className="text-xs text-red-600 mt-2">
          –ù–∞–∂–º–∏—Ç–µ —ç—Ç—É –∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤.
        </p>
      </div>

      {/* –§–æ—Ä–º–∞ */}
      <form onSubmit={handleSubmit} className="bg-white rounded-lg shadow-sm border border-gray-200 p-6 space-y-6">
        {/* –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã */}
        <div>
          <label htmlFor="title" className="block text-sm font-medium text-gray-700 mb-2">
            –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã *
          </label>
          <input
            type="text"
            id="title"
            name="title"
            value={formData.title}
            onChange={handleInputChange}
            required
            maxLength={100}
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É..."
          />
          <div className="text-xs text-gray-500 mt-1">
            {formData.title.length}/100 —Å–∏–º–≤–æ–ª–æ–≤
          </div>
        </div>

        {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
        <div>
          <label htmlFor="category" className="block text-sm font-medium text-gray-700 mb-2">
            –ö–∞—Ç–µ–≥–æ—Ä–∏—è *
          </label>
          <select
            id="category"
            name="category"
            value={formData.category}
            onChange={handleInputChange}
            required
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
          >
            {categories.map(cat => (
              <option key={cat.value} value={cat.value}>
                {cat.emoji} {cat.label}
              </option>
            ))}
          </select>
        </div>

        {/* –ú–µ—Ç—Ä–∏–∫–∞ */}
        <div>
          <label htmlFor="metric" className="block text-sm font-medium text-gray-700 mb-2">
            –ú–µ—Ç—Ä–∏–∫–∞ *
          </label>
          <select
            id="metric"
            name="metric"
            value={formData.metric}
            onChange={handleInputChange}
            required
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
          >
            {metrics.map(metric => (
              <option key={metric.value} value={metric.value}>
                {metric.emoji} {metric.label}
              </option>
            ))}
          </select>
        </div>

        {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
        <div>
          <label htmlFor="description" className="block text-sm font-medium text-gray-700 mb-2">
            –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ *
          </label>
          <textarea
            id="description"
            name="description"
            value={formData.description}
            onChange={handleInputChange}
            required
            rows={6}
            maxLength={1000}
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none"
            placeholder="–î–µ—Ç–∞–ª—å–Ω–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É: —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –≥–¥–µ, –∫–æ–≥–¥–∞, –∫–∞–∫–∏–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è..."
          />
          <div className="text-xs text-gray-500 mt-1">
            {formData.description.length}/1000 —Å–∏–º–≤–æ–ª–æ–≤
          </div>
        </div>

        {/* –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (–¥–æ 5 —Ñ–∞–π–ª–æ–≤, –º–∞–∫—Å 5MB –∫–∞–∂–¥—ã–π)
          </label>
          <div className="text-xs text-gray-500 mb-2">
            üì∑ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∂–∞—Ç—ã –¥–æ 1200px –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
          </div>
          <div className="space-y-4">
            <input
              type="file"
              accept="image/*"
              multiple
              onChange={handleImageChange}
              disabled={isCompressing || isSubmitting}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed"
            />
            
            {images.length > 0 && (
              <div className="space-y-2">
                <p className="text-sm text-gray-600">–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:</p>
                <div className="grid grid-cols-1 gap-2">
                  {images.map((file, index) => (
                    <div key={index} className="flex items-center justify-between bg-gray-50 p-3 rounded-lg">
                      <div className="flex items-center space-x-3">
                        <img
                          src={URL.createObjectURL(file)}
                          alt={`–ü—Ä–µ–≤—å—é ${index + 1}`}
                          className="w-12 h-12 object-cover rounded border"
                        />
                        <div>
                          <p className="text-sm font-medium text-gray-700">{file.name}</p>
                          <p className="text-xs text-gray-500">
                            {(file.size / 1024).toFixed(1)} KB ‚Üí –±—É–¥–µ—Ç —Å–∂–∞—Ç–æ
                          </p>
                        </div>
                      </div>
                      <button
                        type="button"
                        onClick={() => removeImage(index)}
                        disabled={isCompressing || isSubmitting}
                        className="text-red-500 hover:text-red-700 font-medium disabled:opacity-50 disabled:cursor-not-allowed"
                      >
                        –£–¥–∞–ª–∏—Ç—å
                      </button>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
        <button
          type="submit"
          disabled={isSubmitting || isCompressing || !formData.title.trim() || !formData.description.trim()}
          className={`w-full py-4 px-6 rounded-xl font-bold text-lg transition-all duration-300 transform ${
            isSubmitting || isCompressing || !formData.title.trim() || !formData.description.trim()
              ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
              : 'bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white shadow-lg hover:shadow-xl hover:scale-105 active:scale-95'
          }`}
        >
          {isSubmitting ? (
            <div className="flex items-center justify-center space-x-3">
              <div className="animate-spin h-5 w-5 border-3 border-white border-t-transparent rounded-full"></div>
              <span>–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...</span>
            </div>
          ) : isCompressing ? (
            <div className="flex items-center justify-center space-x-3">
              <div className="animate-spin h-5 w-5 border-3 border-white border-t-transparent rounded-full"></div>
              <span>–°–∂–∏–º–∞–µ–º —Ñ–æ—Ç–æ...</span>
            </div>
          ) : (
            <div className="flex items-center justify-center space-x-2">
              <span className="text-2xl">üöÄ</span>
              <span>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É</span>
            </div>
          )}
        </button>
      </form>
    </div>
  );
};

export default SubmitProblemPage; 