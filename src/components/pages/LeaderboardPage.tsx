import React, { useState, useEffect } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import { localDataService, type LocalUser, type SeasonSettings } from '../../services/localDataService';

interface LeaderboardEntry extends LocalUser {
  rank: number;
}

const LeaderboardPage: React.FC = () => {
  const { currentUser } = useAuth();
  const [leaderboard, setLeaderboard] = useState<LeaderboardEntry[]>([]);
  const [loading, setLoading] = useState(true);
  const [isAdmin, setIsAdmin] = useState(false);
  const [seasonSettings, setSeasonSettings] = useState<SeasonSettings | null>(null);

  useEffect(() => {
    loadLeaderboard();
    checkAdminStatus();
    loadSeasonSettings();
  }, [currentUser]);

  const checkAdminStatus = async () => {
    if (currentUser && currentUser.email === 'admin@mail.ru') {
      const adminStatus = await localDataService.isAdmin(currentUser.uid, currentUser.email || '');
      setIsAdmin(adminStatus);
    } else {
      setIsAdmin(false);
    }
  };

  const loadSeasonSettings = async () => {
    try {
      const settings = await localDataService.getSeasonSettings();
      setSeasonSettings(settings);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ–∑–æ–Ω–∞:', error);
    }
  };

  const loadLeaderboard = async () => {
    try {
      setLoading(true);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã
      const users = await localDataService.getLeaderboard();
      setLeaderboard(users as LeaderboardEntry[]);
      
      console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ä–µ–π—Ç–∏–Ω–≥:', users.length, '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞:', error);
      setLeaderboard([]);
    } finally {
      setLoading(false);
    }
  };

  const handleDeleteUser = async (userId: string, userName: string) => {
    if (!currentUser || !isAdmin) {
      alert('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
      return;
    }

    if (window.confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "${userName}"? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.`)) {
      try {
        await localDataService.deleteUser(userId, currentUser.uid, currentUser.email || '');
        alert(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${userName}" —É–¥–∞–ª–µ–Ω`);
        await loadLeaderboard();
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        window.dispatchEvent(new CustomEvent('userStatsUpdated'));
      } catch (error: any) {
        alert(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${error.message}`);
      }
    }
  };

  const handleResetSeason = async () => {
    if (!currentUser || !isAdmin) {
      alert('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
      return;
    }

    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å —Å–µ–∑–æ–Ω? –í—Å–µ –±–∞–ª–ª—ã –∏ –ø—Ä–æ–±–ª–µ–º—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã!')) {
      try {
        await localDataService.resetSeason(currentUser.uid, currentUser.email || '');
        alert('‚úÖ –°–µ–∑–æ–Ω —Å–±—Ä–æ—à–µ–Ω!');
        await loadLeaderboard();
        await loadSeasonSettings();
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        window.dispatchEvent(new CustomEvent('userStatsUpdated'));
      } catch (error: any) {
        alert(`‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞: ${error.message}`);
      }
    }
  };

  const handleFinishSeason = async () => {
    if (!currentUser || !isAdmin) {
      alert('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
      return;
    }

    if (window.confirm('–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ–∑–æ–Ω? –≠—Ç–æ –ø–æ–∫–∞–∂–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!')) {
      try {
        const { report } = await localDataService.finishSeason(currentUser.uid, currentUser.email || '');
        alert(`üèÜ –°–µ–∑–æ–Ω "${report.seasonName}" –∑–∞–≤–µ—Ä—à–µ–Ω!\n\n–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏:\n${report.winners.slice(0, 3).map((w: any) => `${w.rank}. ${w.name} - ${w.points} –±–∞–ª–ª–æ–≤`).join('\n')}`);
        
        await loadLeaderboard();
        await loadSeasonSettings();
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        window.dispatchEvent(new CustomEvent('userStatsUpdated'));
      } catch (error: any) {
        alert(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: ${error.message}`);
      }
    }
  };

  const handleUpdateSeason = async (newSettings: Partial<SeasonSettings>) => {
    if (!currentUser || !isAdmin) {
      alert('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
      return;
    }

    try {
      await localDataService.updateSeasonSettings(newSettings, currentUser.uid, currentUser.email || '');
      alert('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ–∑–æ–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
      await loadSeasonSettings();
    } catch (error: any) {
      alert(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${error.message}`);
    }
  };

  const fixUserNames = async () => {
    try {
      setLoading(true);
      await localDataService.fixUserNames();
      await loadLeaderboard(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥
      alert('‚úÖ –ò–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω:', error);
      alert('‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω');
    } finally {
      setLoading(false);
    }
  };

  const getLevelInfo = (points: number) => {
    if (points >= 10) return { name: '–ú–∞—Å—Ç–µ—Ä', emoji: 'üß†', color: 'text-violet-600' };
    if (points >= 5) return { name: '–ë–æ–µ—Ü', emoji: 'üõ†Ô∏è', color: 'text-amber-600' };
    return { name: '–ù–æ–≤–∏—á–æ–∫', emoji: 'üèÅ', color: 'text-green-600' };
  };

  const getRankEmoji = (rank: number) => {
    if (rank === 1) return 'ü•á';
    if (rank === 2) return 'ü•à';
    if (rank === 3) return 'ü•â';
    if (rank <= 10) return 'üèÜ';
    return 'üéØ';
  };

  const getRankColor = (rank: number) => {
    if (rank === 1) return 'text-yellow-600 bg-yellow-50 border-yellow-200';
    if (rank === 2) return 'text-gray-600 bg-gray-50 border-gray-200';
    if (rank === 3) return 'text-orange-600 bg-orange-50 border-orange-200';
    if (rank <= 10) return 'text-blue-600 bg-blue-50 border-blue-200';
    return 'text-gray-600 bg-gray-50 border-gray-200';
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric'
    });
  };

  const handleActivateSeason = async () => {
    if (!currentUser || !isAdmin) {
      alert('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
      return;
    }

    if (window.confirm('–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä—É? –£—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–º–æ–≥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –∏ –ø–æ–ª—É—á–∞—Ç—å –±–∞–ª–ª—ã!')) {
      try {
        await localDataService.updateSeasonSettings({ isActive: true }, currentUser.uid, currentUser.email || '');
        alert('üöÄ –ò–≥—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! –£—á–∞—Å—Ç–Ω–∏–∫–∏ –º–æ–≥—É—Ç –Ω–∞—á–∏–Ω–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–±–ª–µ–º—ã!');
        await loadSeasonSettings();
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        window.dispatchEvent(new CustomEvent('userStatsUpdated'));
      } catch (error: any) {
        alert(`‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ${error.message}`);
      }
    }
  };

  const handleDeactivateSeason = async () => {
    if (!currentUser || !isAdmin) {
      alert('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
      return;
    }

    if (window.confirm('–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É? –£—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ —Å–º–æ–≥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã!')) {
      try {
        await localDataService.updateSeasonSettings({ isActive: false }, currentUser.uid, currentUser.email || '');
        alert('‚è∏Ô∏è –ò–≥—Ä–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!');
        await loadSeasonSettings();
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        window.dispatchEvent(new CustomEvent('userStatsUpdated'));
      } catch (error: any) {
        alert(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏: ${error.message}`);
      }
    }
  };

  const handleConfigureSeason = async () => {
    if (!currentUser || !isAdmin) {
      alert('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
      return;
    }

    // –ë—ã—Å—Ç—Ä—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
    const quickOptions = window.confirm(
      'üöÄ –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞?\n\n' +
      '–î–ê - –≤—ã–±—Ä–∞—Ç—å –∏–∑ –≥–æ—Ç–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤\n' +
      '–ù–ï–¢ - –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—ã –≤—Ä—É—á–Ω—É—é'
    );

    let startDateTime: string;
    let endDateTime: string;

    if (quickOptions) {
      // –ë—ã—Å—Ç—Ä—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
      const option = prompt(
        '‚ö° –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –∏–≥—Ä—ã:\n\n' +
        '1 - 10 –º–∏–Ω—É—Ç\n' +
        '2 - 1 —á–∞—Å\n' +
        '3 - 1 –¥–µ–Ω—å\n' +
        '4 - 1 –Ω–µ–¥–µ–ª—è\n' +
        '5 - 1 –º–µ—Å—è—Ü\n\n' +
        '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5):'
      );

      const now = new Date();
      let endTime: Date;

      switch (option) {
        case '1':
          endTime = new Date(now.getTime() + 10 * 60 * 1000); // +10 –º–∏–Ω—É—Ç
          break;
        case '2':
          endTime = new Date(now.getTime() + 60 * 60 * 1000); // +1 —á–∞—Å
          break;
        case '3':
          endTime = new Date(now.getTime() + 24 * 60 * 60 * 1000); // +1 –¥–µ–Ω—å
          break;
        case '4':
          endTime = new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000); // +1 –Ω–µ–¥–µ–ª—è
          break;
        case '5':
          endTime = new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000); // +1 –º–µ—Å—è—Ü
          break;
        default:
          alert('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä');
          return;
      }

      startDateTime = now.toISOString();
      endDateTime = endTime.toISOString();
    } else {
      // –†—É—á–Ω–æ–π –≤–≤–æ–¥
      const startDateInput = prompt(
        'üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ù–ê–ß–ê–õ–ê –∏–≥—Ä—ã\n\n' +
        '–§–æ—Ä–º–∞—Ç: –ì–ì–ì–ì-–ú–ú-–î–î\n' +
        '–ü—Ä–∏–º–µ—Ä: 2024-06-20'
      );

      if (!startDateInput) return;

      const startTimeInput = prompt(
        '‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –ù–ê–ß–ê–õ–ê –∏–≥—Ä—ã\n\n' +
        '–§–æ—Ä–º–∞—Ç: –ß–ß:–ú–ú\n' +
        '–ü—Ä–∏–º–µ—Ä: 09:00'
      );

      if (!startTimeInput) return;

      const endDateInput = prompt(
        'üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –û–ö–û–ù–ß–ê–ù–ò–Ø –∏–≥—Ä—ã\n\n' +
        '–§–æ—Ä–º–∞—Ç: –ì–ì–ì–ì-–ú–ú-–î–î\n' +
        '–ü—Ä–∏–º–µ—Ä: 2024-06-21'
      );

      if (!endDateInput) return;

      const endTimeInput = prompt(
        '‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –û–ö–û–ù–ß–ê–ù–ò–Ø –∏–≥—Ä—ã\n\n' +
        '–§–æ—Ä–º–∞—Ç: –ß–ß:–ú–ú\n' +
        '–ü—Ä–∏–º–µ—Ä: 18:00'
      );

      if (!endTimeInput) return;

      try {
        startDateTime = new Date(`${startDateInput}T${startTimeInput}:00`).toISOString();
        endDateTime = new Date(`${endDateInput}T${endTimeInput}:00`).toISOString();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–Ω–µ—Ü –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞
        if (new Date(endDateTime) <= new Date(startDateTime)) {
          alert('‚ùå –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–∑–∂–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞');
          return;
        }
      } catch (error) {
        alert('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–∏');
        return;
      }
    }

    // –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ–∑–æ–Ω–∞
    const seasonName = prompt(
      'üéÆ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:\n\n' +
      '–ü—Ä–∏–º–µ—Ä: –í–µ—Å–µ–Ω–Ω–∏–π –∫–æ–Ω–∫—É—Ä—Å 2024',
      seasonSettings?.currentSeason || '–ö–æ–Ω–∫—É—Ä—Å –ü–ù–†'
    );

    if (!seasonName) return;

    // –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    const isActive = window.confirm(
      'üü¢ –°–¥–µ–ª–∞—Ç—å –∏–≥—Ä—É –∞–∫—Ç–∏–≤–Ω–æ–π?\n\n' +
      '–î–ê - —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–º–æ–≥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–±–ª–µ–º—ã\n' +
      '–ù–ï–¢ - –∏–≥—Ä–∞ –±—É–¥–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞'
    );

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    try {
      await localDataService.updateSeasonSettings({
        currentSeason: seasonName,
        seasonStartDate: startDateTime,
        seasonEndDate: endDateTime,
        isActive: isActive
      }, currentUser.uid, currentUser.email || '');

      const startDate = new Date(startDateTime);
      const endDate = new Date(endDateTime);

      alert(
        '‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!\n\n' +
        `üéÆ –ò–≥—Ä–∞: ${seasonName}\n` +
        `üü¢ –ù–∞—á–∞–ª–æ: ${startDate.toLocaleDateString('ru-RU')} –≤ ${startDate.toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'})}\n` +
        `üèÅ –û–∫–æ–Ω—á–∞–Ω–∏–µ: ${endDate.toLocaleDateString('ru-RU')} –≤ ${endDate.toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'})}\n` +
        `üìä –°—Ç–∞—Ç—É—Å: ${isActive ? 'üü¢ –ê–∫—Ç–∏–≤–Ω–∞' : 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}`
      );

      await loadSeasonSettings();
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
      window.dispatchEvent(new CustomEvent('userStatsUpdated'));
    } catch (error: any) {
      alert(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${error.message}`);
    }
  };

  if (loading) {
    return (
      <div className="max-w-4xl mx-auto px-4 py-4 sm:py-8">
        <div className="text-center">
          <div className="animate-spin h-8 w-8 border-2 border-blue-600 border-t-transparent rounded-full mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto px-4 py-4 sm:py-8">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center mb-6 sm:mb-8">
        <h1 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-2">
          üèÜ –†–µ–π—Ç–∏–Ω–≥ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        </h1>
        <p className="text-gray-600 text-sm sm:text-base">
          –†–µ–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –±–∞–ª–ª–æ–≤
        </p>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ */}
      <div className="mb-6 sm:mb-8 p-4 bg-blue-50 border border-blue-200 rounded-lg">
        <div className="flex items-start space-x-3">
          <span className="text-2xl">üíæ</span>
          <div className="flex-1">
            <h3 className="font-semibold text-blue-800">–†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h3>
            <p className="text-sm text-blue-600">
              –†–µ–π—Ç–∏–Ω–≥ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.<br />
              –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ JSON —Ñ–∞–π–ª—ã: /Users/mike/Desktop/quiz/problem-tracker-data/
            </p>
            {isAdmin && (
              <div className="mt-2 p-2 bg-red-50 border border-red-200 rounded">
                <p className="text-xs text-red-600 font-medium">
                  üîë –†–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: –¥–æ—Å—Ç—É–ø–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                </p>
              </div>
            )}
          </div>
        </div>
      </div>

      {/* –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å —Å–µ–∑–æ–Ω–∞ */}
      {isAdmin && seasonSettings && (
        <div className="mb-6 sm:mb-8 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
          <h3 className="font-semibold text-yellow-800 mb-3">‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–π (—Ç–æ–ª—å–∫–æ admin@mail.ru)</h3>
          
          {/* –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å */}
          <div className="mb-4 p-3 bg-white rounded-lg border">
            <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 text-sm">
              <div>
                <p><strong>üéÆ –ù–∞–∑–≤–∞–Ω–∏–µ:</strong> {seasonSettings.currentSeason}</p>
                <p><strong>üìä –°—Ç–∞—Ç—É—Å:</strong> 
                  <span className={`ml-2 px-2 py-1 rounded-full text-xs font-medium ${
                    seasonSettings.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
                  }`}>
                    {seasonSettings.isActive ? 'üü¢ –ê–∫—Ç–∏–≤–Ω–∞' : 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}
                  </span>
                </p>
              </div>
              <div>
                <p><strong>üìÖ –ü–µ—Ä–∏–æ–¥ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:</strong></p>
                <p className="text-xs text-gray-600">
                  üü¢ –ù–∞—á–∞–ª–æ: {new Date(seasonSettings.seasonStartDate).toLocaleDateString('ru-RU')} –≤ {new Date(seasonSettings.seasonStartDate).toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'})}
                  <br />
                  üèÅ –û–∫–æ–Ω—á–∞–Ω–∏–µ: {new Date(seasonSettings.seasonEndDate).toLocaleDateString('ru-RU')} –≤ {new Date(seasonSettings.seasonEndDate).toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'})}
                </p>
              </div>
            </div>
            
            {/* –ü–æ—è—Å–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è */}
            <div className="mt-2 p-2 bg-gray-50 rounded text-xs text-gray-600">
              {seasonSettings.isActive ? (
                <p>‚úÖ <strong>–ò–≥—Ä–∞ –∞–∫—Ç–∏–≤–Ω–∞:</strong> —É—á–∞—Å—Ç–Ω–∏–∫–∏ –º–æ–≥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –∏ –ø–æ–ª—É—á–∞—Ç—å –±–∞–ª–ª—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "‚è∏Ô∏è –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.</p>
              ) : (
                <p>‚è∏Ô∏è <strong>–ò–≥—Ä–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞:</strong> —É—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ –º–æ–≥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "üöÄ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å" –¥–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.</p>
              )}
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
          <div className="space-y-3">
            {/* –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
            <div className="flex flex-wrap gap-2">
              <button
                onClick={handleConfigureSeason}
                className="bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium py-2 px-4 rounded-lg transition-colors"
              >
                üìÖ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–∏–æ–¥ –∏–≥—Ä—ã
              </button>
              
              {seasonSettings.isActive ? (
                <button
                  onClick={handleDeactivateSeason}
                  className="bg-orange-600 hover:bg-orange-700 text-white text-sm font-medium py-2 px-4 rounded-lg transition-colors"
                >
                  ‚è∏Ô∏è –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É
                </button>
              ) : (
                <button
                  onClick={handleActivateSeason}
                  className="bg-green-600 hover:bg-green-700 text-white text-sm font-medium py-2 px-4 rounded-lg transition-colors"
                >
                  üöÄ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä—É
                </button>
              )}
            </div>

            {/* –§–∏–Ω–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
            <div className="flex flex-wrap gap-2 pt-2 border-t border-yellow-300">
              <button
                onClick={handleFinishSeason}
                className="bg-purple-600 hover:bg-purple-700 text-white text-sm font-medium py-2 px-4 rounded-lg transition-colors"
              >
                üèÜ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É —Å –æ—Ç—á–µ—Ç–æ–º
              </button>
              <button
                onClick={handleResetSeason}
                className="bg-red-600 hover:bg-red-700 text-white text-sm font-medium py-2 px-4 rounded-lg transition-colors"
              >
                üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
              </button>
            </div>
          </div>

          {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ */}
          <div className="mt-3 text-xs text-yellow-700 space-y-1">
            <p>üí° <strong>–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–∏–æ–¥:</strong> —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–≥—Ä—ã (–º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ª—é–±–æ–π –ø–µ—Ä–∏–æ–¥: 10 –º–∏–Ω—É—Ç, —á–∞—Å, –¥–µ–Ω—å, –º–µ—Å—è—Ü)</p>
            <p>üöÄ <strong>–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å:</strong> —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–º–æ–≥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –∏ –ø–æ–ª—É—á–∞—Ç—å –±–∞–ª–ª—ã</p>
            <p>‚è∏Ô∏è <strong>–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:</strong> –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö</p>
            <p>üèÜ <strong>–ó–∞–≤–µ—Ä—à–∏—Ç—å:</strong> –ø–æ–∫–∞–∂–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º</p>
            <p>üîÑ <strong>–°–±—Ä–æ—Å–∏—Ç—å:</strong> —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞—á–Ω–µ—Ç –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ</p>
          </div>
        </div>
      )}

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-2 sm:grid-cols-3 gap-4 mb-6 sm:mb-8">
        <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4 text-center">
          <div className="text-2xl sm:text-3xl font-bold text-blue-600">
            {leaderboard.length}
          </div>
          <div className="text-xs sm:text-sm text-gray-600 mt-1">
            –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤
          </div>
        </div>
        
        <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4 text-center">
          <div className="text-2xl sm:text-3xl font-bold text-green-600">
            {leaderboard.reduce((sum, user) => sum + user.totalPoints, 0)}
          </div>
          <div className="text-xs sm:text-sm text-gray-600 mt-1">
            –í—Å–µ–≥–æ –±–∞–ª–ª–æ–≤
          </div>
        </div>
        
        <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4 text-center col-span-2 sm:col-span-1">
          <div className="text-2xl sm:text-3xl font-bold text-purple-600">
            {leaderboard.reduce((sum, user) => sum + user.totalProblems, 0)}
          </div>
          <div className="text-xs sm:text-sm text-gray-600 mt-1">
            –ü—Ä–æ–±–ª–µ–º –Ω–∞–π–¥–µ–Ω–æ
          </div>
        </div>
      </div>

      {/* –¢–æ–ø-3 - –æ—Å–æ–±–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
      {leaderboard.length > 0 && (
        <div className="mb-6 sm:mb-8">
          <h2 className="text-lg sm:text-xl font-semibold text-gray-900 mb-4 text-center">
            üèÜ –¢–æ–ø-3 –ª–∏–¥–µ—Ä–∞
          </h2>
          <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
            {leaderboard.slice(0, 3).map((user) => {
              const levelInfo = getLevelInfo(user.totalPoints);
              return (
                <div
                  key={user.id}
                  className={`bg-white rounded-lg shadow-sm p-4 sm:p-6 text-center border-2 ${getRankColor(user.rank)}`}
                >
                  <div className="text-3xl sm:text-4xl mb-2">
                    {getRankEmoji(user.rank)}
                  </div>
                  <div className="text-lg sm:text-xl font-bold text-gray-900 mb-1">
                    {user.fullName}
                  </div>
                  <div className="flex items-center justify-center space-x-1 mb-2">
                    <span className="text-lg sm:text-xl">{levelInfo.emoji}</span>
                    <span className="text-sm font-medium text-gray-700">
                      {levelInfo.name}
                    </span>
                  </div>
                  <div className="text-2xl sm:text-3xl font-bold text-blue-600 mb-1">
                    {user.totalPoints}
                  </div>
                  <div className="text-xs sm:text-sm text-gray-600">
                    {user.totalProblems} –ø—Ä–æ–±–ª–µ–º
                  </div>
                  <div className="text-xs text-gray-500 mt-2">
                    –° {formatDate(user.joinedAt)}
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      )}

      {/* –ü–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200">
        <div className="p-4 sm:p-6 border-b border-gray-200">
          <h2 className="text-lg sm:text-xl font-semibold text-gray-900">
            üìä –ü–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥
          </h2>
        </div>
        
        <div className="divide-y divide-gray-200">
          {leaderboard.length === 0 ? (
            <div className="p-8 text-center">
              <div className="text-6xl mb-4">ü§∑‚Äç‚ôÇÔ∏è</div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">
                –ü–æ–∫–∞ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
              </h3>
              <p className="text-gray-600 mb-4">
                –°—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä–≤—ã–º! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–∞–ª–ª—ã.
              </p>
              <p className="text-sm text-gray-500">
                –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–±–ª–µ–º—ã.
              </p>
            </div>
          ) : (
            leaderboard.map((user) => {
              const levelInfo = getLevelInfo(user.totalPoints);
              return (
                <div
                  key={user.id}
                  className="p-3 sm:p-4 flex items-center justify-between hover:bg-gray-50 transition-colors"
                >
                  <div className="flex items-center space-x-3 sm:space-x-4 flex-1">
                    <div className="flex items-center justify-center w-8 h-8 sm:w-10 sm:h-10">
                      <span className="text-lg sm:text-xl">
                        {getRankEmoji(user.rank)}
                      </span>
                    </div>
                    
                    <div className="flex items-center space-x-2 sm:space-x-3 flex-1">
                      <span className="text-sm sm:text-base font-medium text-gray-900">
                        #{user.rank}
                      </span>
                      <span className="text-lg sm:text-xl">{levelInfo.emoji}</span>
                      <div className="flex-1">
                        <div className="text-sm sm:text-base font-semibold text-gray-900 flex items-center gap-2">
                          {user.fullName}
                          {user.isAdmin && (
                            <span className="bg-red-100 text-red-600 text-xs px-2 py-1 rounded-full font-medium">
                              üëë –ê–¥–º–∏–Ω
                            </span>
                          )}
                        </div>
                        <div className="text-xs sm:text-sm text-gray-600">
                          {levelInfo.name} ‚Ä¢ {user.totalProblems} –ø—Ä–æ–±–ª–µ–º ‚Ä¢ —Å {formatDate(user.joinedAt)}
                        </div>
                      </div>
                    </div>
                  </div>
                  
                  <div className="flex items-center space-x-2">
                    <div className="text-right">
                      <div className="text-lg sm:text-xl font-bold text-blue-600">
                        {user.totalPoints}
                      </div>
                      <div className="text-xs sm:text-sm text-gray-600">
                        –±–∞–ª–ª–æ–≤
                      </div>
                    </div>
                    
                    {/* –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏ */}
                    {isAdmin && !user.isAdmin && (
                      <button
                        onClick={() => handleDeleteUser(user.id, user.fullName)}
                        className="bg-red-500 hover:bg-red-600 text-white text-xs font-medium py-1 px-2 rounded transition-colors ml-2"
                        title="–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                      >
                        üóëÔ∏è
                      </button>
                    )}
                  </div>
                </div>
              );
            })
          )}
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –±–∞–ª–ª–æ–≤ */}
      <div className="mt-6 sm:mt-8 p-4 sm:p-6 bg-green-50 rounded-lg">
        <h3 className="text-base sm:text-lg font-semibold text-green-900 mb-2">
          üí° –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞ –±–∞–ª–ª–æ–≤?
        </h3>
        <div className="grid grid-cols-1 sm:grid-cols-2 gap-2 sm:gap-4 text-sm text-green-800">
          <div>
            <p>‚Ä¢ –ó–∞ –∫–∞–∂–¥—É—é –ø—Ä–æ–±–ª–µ–º—É: +1 –±–∞–ª–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</p>
            <p>‚Ä¢ –ë–æ–Ω—É—Å –æ—Ç –∞–¥–º–∏–Ω–∞: –¥–æ +10 –±–∞–ª–ª–æ–≤ –∑–∞ –≤–∞–∂–Ω—ã–µ –Ω–∞—Ö–æ–¥–∫–∏</p>
            <p>‚Ä¢ –†–µ–π—Ç–∏–Ω–≥ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</p>
          </div>
          <div>
            <p>‚Ä¢ üèÅ –ù–æ–≤–∏—á–æ–∫: 1-4 –±–∞–ª–ª–∞</p>
            <p>‚Ä¢ üõ†Ô∏è –ë–æ–µ—Ü: 5-9 –±–∞–ª–ª–æ–≤</p>
            <p>‚Ä¢ üß† –ú–∞—Å—Ç–µ—Ä: 10+ –±–∞–ª–ª–æ–≤</p>
          </div>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="mt-6 sm:mt-8 flex flex-col sm:flex-row gap-3 sm:gap-4">
        <button
          onClick={loadLeaderboard}
          className="flex-1 bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors"
        >
          üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥
        </button>
        {isAdmin ? (
          <>
            <button
              onClick={fixUserNames}
              className="flex-1 bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-lg transition-colors"
            >
              ‚úèÔ∏è –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∏–º–µ–Ω–∞
            </button>
            <button
              onClick={() => localDataService.exportData()}
              className="flex-1 bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded-lg transition-colors"
            >
              üì¶ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
            </button>
          </>
        ) : (
          <button
            onClick={() => localDataService.exportData()}
            className="flex-1 bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-lg transition-colors"
          >
            üì¶ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
          </button>
        )}
      </div>
    </div>
  );
};

export default LeaderboardPage; 