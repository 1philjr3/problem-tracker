import React, { useState, useEffect } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import { localDataService, type LocalProblem, type LocalUser } from '../../services/localDataService';

interface ProblemWithUser extends LocalProblem {
  user: LocalUser;
}

const AllProblemsPage: React.FC = () => {
  const { currentUser } = useAuth();
  const [problems, setProblems] = useState<ProblemWithUser[]>([]);
  const [loading, setLoading] = useState(true);
  const [selectedProblem, setSelectedProblem] = useState<ProblemWithUser | null>(null);
  const [bonusPoints, setBonusPoints] = useState('');
  const [bonusReason, setBonusReason] = useState('');
  const [filter, setFilter] = useState<'all' | 'pending' | 'reviewed'>('all');
  const [reviewedFilter, setReviewedFilter] = useState<'all' | 'reviewed' | 'not_reviewed'>('all');
  const [searchTerm, setSearchTerm] = useState('');
  const [isAdmin, setIsAdmin] = useState(false);

  useEffect(() => {
    loadProblems();
    checkAdminStatus();
  }, [currentUser]);

  const checkAdminStatus = async () => {
    if (currentUser && currentUser.email === 'admin@mail.ru') {
      const adminStatus = await localDataService.isAdmin(currentUser.uid, currentUser.email || '');
      setIsAdmin(adminStatus);
      console.log(`üîç AllProblemsPage checkAdminStatus: email=${currentUser.email}, isAdmin=${adminStatus}`);
    } else {
      setIsAdmin(false);
    }
  };

  const loadProblems = async () => {
    try {
      setLoading(true);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      const [problemsData, allData] = await Promise.all([
        localDataService.getProblems(),
        localDataService.getAllData()
      ]);

      // –û–±—ä–µ–¥–∏–Ω—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const problemsWithUsers: ProblemWithUser[] = problemsData.map(problem => {
        const user = allData.users.find(u => u.id === problem.authorId);
        return {
          ...problem,
          user: user || {
            id: problem.authorId,
            email: 'unknown@email.com',
            fullName: problem.authorName,
            totalPoints: 0,
            totalProblems: 0,
            level: 'novice' as const,
            joinedAt: new Date().toISOString(),
            lastActive: new Date().toISOString(),
          }
        };
      });

      setProblems(problemsWithUsers);
      console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º:', problemsWithUsers.length);

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–±–ª–µ–º:', error);
      setProblems([]);
    } finally {
      setLoading(false);
    }
  };

  const getCategoryInfo = (category: string) => {
    const categories: Record<string, { name: string; emoji: string; color: string }> = {
      maintenance: { name: '–¢–û', emoji: 'üîß', color: 'bg-blue-100 text-blue-800' },
      testing: { name: '–ò—Å–ø—ã—Ç–∞–Ω–∏—è', emoji: 'üß™', color: 'bg-red-100 text-red-800' },
      audit: { name: '–ê—É–¥–∏—Ç', emoji: 'üìã', color: 'bg-purple-100 text-purple-800' },
      safety: { name: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', emoji: '‚ö†Ô∏è', color: 'bg-yellow-100 text-yellow-800' },
      quality: { name: '–ö–∞—á–µ—Å—Ç–≤–æ', emoji: '‚úÖ', color: 'bg-green-100 text-green-800' },
      equipment: { name: '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', emoji: '‚öôÔ∏è', color: 'bg-gray-100 text-gray-800' },
      process: { name: '–ü—Ä–æ—Ü–µ—Å—Å—ã', emoji: 'üîÑ', color: 'bg-pink-100 text-pink-800' },
      other: { name: '–î—Ä—É–≥–æ–µ', emoji: 'üìù', color: 'bg-indigo-100 text-indigo-800' },
    };
    return categories[category] || categories.other;
  };

  const getLevelInfo = (level: string) => {
    const levels: Record<string, { name: string; emoji: string; color: string }> = {
      novice: { name: '–ù–æ–≤–∏—á–æ–∫', emoji: 'üèÅ', color: 'bg-green-100 text-green-800' },
      fighter: { name: '–ë–æ–µ—Ü', emoji: 'üõ†Ô∏è', color: 'bg-amber-100 text-amber-800' },
      master: { name: '–ú–∞—Å—Ç–µ—Ä', emoji: 'üß†', color: 'bg-violet-100 text-violet-800' },
    };
    return levels[level] || levels.novice;
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleString('ru-RU', {
      day: '2-digit',
      month: '2-digit', 
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const handleAddBonusPoints = async () => {
    if (!selectedProblem || !bonusPoints || !bonusReason.trim() || !currentUser) {
      alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
      return;
    }

    if (!isAdmin) {
      alert('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ã');
      return;
    }

    const points = parseInt(bonusPoints);
    if (isNaN(points) || points <= 0 || points > 10) {
      alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ (1-10)');
      return;
    }

    try {
      await localDataService.addBonusPoints(
        selectedProblem.id, 
        points, 
        bonusReason, 
        currentUser.uid
      );

      alert(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${points} –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤ –¥–ª—è "${selectedProblem.title}"!`);
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
      window.dispatchEvent(new CustomEvent('userStatsUpdated'));
      
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      await loadProblems();
      
      setSelectedProblem(null);
      setBonusPoints('');
      setBonusReason('');
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤:', error);
      alert(`‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤: ${error.message}`);
    }
  };

  const handleMarkAsReviewed = async (problemId: string) => {
    if (!currentUser || !isAdmin) {
      alert('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –æ—Ç–º–µ—á–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ');
      return;
    }

    try {
      await localDataService.markProblemAsReviewed(problemId, currentUser.uid, currentUser.email || '');
      
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      await loadProblems();
      
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ–±–ª–µ–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω');
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:', error);
      alert(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    }
  };

  const filteredProblems = problems.filter(problem => {
    const matchesFilter = filter === 'all' || problem.status === filter;
    const matchesReviewedFilter = 
      reviewedFilter === 'all' || 
      (reviewedFilter === 'reviewed' && problem.reviewed) ||
      (reviewedFilter === 'not_reviewed' && !problem.reviewed);
    const matchesSearch = searchTerm === '' || 
      problem.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
      problem.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
      problem.user.fullName.toLowerCase().includes(searchTerm.toLowerCase());
    
    return matchesFilter && matchesReviewedFilter && matchesSearch;
  });

  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–±–ª–µ–º...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-6xl mx-auto p-4 space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">
          üìã –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        </h1>
        <p className="text-gray-600">
          –í—Å–µ–≥–æ –ø—Ä–æ–±–ª–µ–º: {problems.length} ‚Ä¢ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: {filteredProblems.length}
        </p>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ */}
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
        <div className="flex items-start space-x-3">
          <span className="text-2xl">üíæ</span>
          <div className="flex-1">
            <h3 className="font-semibold text-blue-800">–†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>
            <p className="text-sm text-blue-600">
              –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.<br />
              –î–∞–Ω–Ω—ã–µ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è: /Users/mike/Desktop/quiz/problem-tracker-data/
            </p>
            {isAdmin && (
              <div className="mt-2 p-2 bg-red-50 border border-red-200 rounded">
                <p className="text-xs text-red-600 font-medium">
                  üîë –†–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: –¥–æ—Å—Ç—É–ø–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤
                </p>
              </div>
            )}
          </div>
        </div>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
      <div className="bg-white rounded-lg shadow-sm p-6 space-y-4">
        <div className="flex flex-col sm:flex-row gap-4">
          {/* –ü–æ–∏—Å–∫ */}
          <div className="flex-1">
            <input
              type="text"
              placeholder="üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –æ–ø–∏—Å–∞–Ω–∏—é –∏–ª–∏ –∞–≤—Ç–æ—Ä—É..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            />
          </div>

          {/* –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É */}
          <select
            value={filter}
            onChange={(e) => setFilter(e.target.value as 'all' | 'pending' | 'reviewed')}
            className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
          >
            <option value="all">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
            <option value="pending">–û–∂–∏–¥–∞—é—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è</option>
            <option value="reviewed">–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω—ã</option>
          </select>

          {/* –§–∏–ª—å—Ç—Ä –ø–æ –ø—Ä–æ—Å–º–æ—Ç—Ä—É (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞) */}
          {isAdmin && (
            <select
              value={reviewedFilter}
              onChange={(e) => setReviewedFilter(e.target.value as 'all' | 'reviewed' | 'not_reviewed')}
              className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="all">–í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã</option>
              <option value="reviewed">üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ</option>
              <option value="not_reviewed">‚ùå –ù–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ</option>
            </select>
          )}
        </div>

        <div className="text-sm text-gray-600">
          –ü–æ–∫–∞–∑–∞–Ω–æ: {filteredProblems.length} –∏–∑ {problems.length} –ø—Ä–æ–±–ª–µ–º
          {isAdmin && (
            <span className="ml-4">
              ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ: {problems.filter(p => p.reviewed).length} 
              ‚Ä¢ –ù–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ: {problems.filter(p => !p.reviewed).length}
            </span>
          )}
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º */}
      <div className="space-y-4">
        {filteredProblems.length === 0 ? (
          <div className="text-center py-12">
            <div className="text-6xl mb-4">ü§∑‚Äç‚ôÇÔ∏è</div>
            <h3 className="text-xl font-semibold text-gray-900 mb-2">
              {problems.length === 0 ? '–ü—Ä–æ–±–ª–µ–º –ø–æ–∫–∞ –Ω–µ—Ç' : '–ü—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'}
            </h3>
            <p className="text-gray-600">
              {problems.length === 0 
                ? '–ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞—á–Ω—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.'
                : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å'
              }
            </p>
          </div>
        ) : (
          filteredProblems.map((problem) => {
            const categoryInfo = getCategoryInfo(problem.category);
            const levelInfo = getLevelInfo(problem.user.level);
            
            return (
              <div key={problem.id} className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                <div className="flex flex-col lg:flex-row lg:items-start gap-4">
                  {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                  <div className="flex-1 space-y-3">
                    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è */}
                    <div className="flex flex-wrap items-center gap-2">
                      {/* –ì–∞–ª–æ—á–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞ */}
                      {isAdmin && (
                        <button
                          onClick={() => handleMarkAsReviewed(problem.id)}
                          className={`flex items-center justify-center w-6 h-6 rounded border-2 transition-colors ${
                            problem.reviewed 
                              ? 'bg-green-500 border-green-500 text-white' 
                              : 'border-gray-300 hover:border-green-400'
                          }`}
                          title={problem.reviewed ? '–°–Ω—è—Ç—å –æ—Ç–º–µ—Ç–∫—É –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ' : '–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—É—é'}
                        >
                          {problem.reviewed && <span className="text-xs">‚úì</span>}
                        </button>
                      )}
                      
                      <h3 className="text-lg font-semibold text-gray-900">
                        {problem.title}
                      </h3>
                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${categoryInfo.color}`}>
                        {categoryInfo.emoji} {categoryInfo.name}
                      </span>
                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                        problem.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :
                        'bg-green-100 text-green-800'
                      }`}>
                        {problem.status === 'pending' ? '‚è≥ –û–∂–∏–¥–∞–µ—Ç' : '‚úÖ –†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ'}
                      </span>
                      
                      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ */}
                      {problem.reviewed && (
                        <span className="px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                          üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ
                        </span>
                      )}
                    </div>

                    {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
                    <p className="text-gray-700 leading-relaxed">
                      {problem.description}
                    </p>

                    {/* –ê–≤—Ç–æ—Ä –∏ –¥–∞—Ç–∞ */}
                    <div className="flex flex-wrap items-center gap-4 text-sm text-gray-600">
                      <div className="flex items-center gap-2">
                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${levelInfo.color}`}>
                          {levelInfo.emoji} {levelInfo.name}
                        </span>
                        <span className="font-medium">{problem.user.fullName}</span>
                        <span className="text-xs text-gray-500">({problem.user.totalPoints} –±–∞–ª–ª–æ–≤)</span>
                      </div>
                      <div className="flex items-center gap-1">
                        <span>üìÖ</span>
                        <span>{formatDate(problem.createdAt)}</span>
                      </div>
                      <div className="flex items-center gap-1">
                        <span>‚≠ê</span>
                        <span className="font-semibold text-blue-600">{problem.points} –±–∞–ª–ª–æ–≤</span>
                      </div>
                      
                      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ */}
                      {problem.reviewed && problem.reviewedAt && (
                        <div className="flex items-center gap-1 text-xs text-blue-600">
                          <span>üëÅÔ∏è</span>
                          <span>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ {formatDate(problem.reviewedAt)}</span>
                        </div>
                      )}
                    </div>

                    {/* –ó–∞–º–µ—Ç–∫–∏ –∞–¥–º–∏–Ω–∞ */}
                    {problem.adminNotes && (
                      <div className="bg-blue-50 border-l-4 border-blue-400 p-3 rounded">
                        <div className="flex items-start gap-2">
                          <span className="text-blue-600">üí¨</span>
                          <div>
                            <p className="text-sm font-medium text-blue-800">–ó–∞–º–µ—Ç–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</p>
                            <p className="text-sm text-blue-700">{problem.adminNotes}</p>
                          </div>
                        </div>
                      </div>
                    )}
                  </div>

                  {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –¥–µ–π—Å—Ç–≤–∏—è */}
                  <div className="lg:w-64 space-y-4">
                    {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
                    {problem.images.length > 0 && (
                      <div className="space-y-2">
                        <p className="text-sm font-medium text-gray-700">
                          üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ({problem.images.length}):
                        </p>
                        <div className="grid grid-cols-2 gap-2">
                          {problem.images.slice(0, 4).map((imageName, index) => (
                            <div key={index} className="bg-gray-100 rounded-lg p-2 text-center">
                              <div className="text-2xl mb-1">üñºÔ∏è</div>
                              <p className="text-xs text-gray-600 truncate">
                                {imageName}
                              </p>
                            </div>
                          ))}
                        </div>
                        {problem.images.length > 4 && (
                          <p className="text-xs text-gray-500 text-center">
                            +{problem.images.length - 4} –µ—â–µ...
                          </p>
                        )}
                      </div>
                    )}

                    {/* –ê–¥–º–∏–Ω—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è */}
                    {isAdmin && (
                      <div className="space-y-2">
                        <button
                          onClick={() => setSelectedProblem(problem)}
                          className="w-full bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-lg transition-colors"
                        >
                          ‚≠ê –î–æ–±–∞–≤–∏—Ç—å –±–∞–ª–ª—ã
                        </button>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            );
          })
        )}
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="flex flex-col sm:flex-row gap-3 sm:gap-4">
        <button
          onClick={loadProblems}
          className="flex-1 bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors"
        >
          üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫
        </button>
        <button
          onClick={() => localDataService.exportData()}
          className="flex-1 bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-lg transition-colors"
        >
          üì¶ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
        </button>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤ */}
      {selectedProblem && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-lg max-w-md w-full p-6 space-y-4">
            <h3 className="text-lg font-bold text-gray-900">
              ‚≠ê –î–æ–±–∞–≤–∏—Ç—å –±–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ã
            </h3>
            
            <div className="space-y-2">
              <p className="text-sm text-gray-600">
                <strong>–ü—Ä–æ–±–ª–µ–º–∞:</strong> {selectedProblem.title}
              </p>
              <p className="text-sm text-gray-600">
                <strong>–ê–≤—Ç–æ—Ä:</strong> {selectedProblem.user.fullName}
              </p>
              <p className="text-sm text-gray-600">
                <strong>–¢–µ–∫—É—â–∏–µ –±–∞–ª–ª—ã:</strong> {selectedProblem.points}
              </p>
            </div>

            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤ (1-10):
                </label>
                <input
                  type="number"
                  value={bonusPoints}
                  onChange={(e) => setBonusPoints(e.target.value)}
                  min="1"
                  max="10"
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ü—Ä–∏—á–∏–Ω–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è:
                </label>
                <textarea
                  value={bonusReason}
                  onChange={(e) => setBonusReason(e.target.value)}
                  rows={3}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  placeholder="–û–ø–∏—à–∏—Ç–µ –∑–∞ —á—Ç–æ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –±–∞–ª–ª—ã..."
                />
              </div>
            </div>

            <div className="flex gap-3">
              <button
                onClick={handleAddBonusPoints}
                className="flex-1 bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-lg transition-colors"
              >
                ‚úÖ –î–æ–±–∞–≤–∏—Ç—å –±–∞–ª–ª—ã
              </button>
              <button
                onClick={() => {
                  setSelectedProblem(null);
                  setBonusPoints('');
                  setBonusReason('');
                }}
                className="flex-1 bg-gray-300 hover:bg-gray-400 text-gray-700 font-medium py-2 px-4 rounded-lg transition-colors"
              >
                ‚ùå –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default AllProblemsPage; 