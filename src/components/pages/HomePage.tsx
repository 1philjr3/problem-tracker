import React, { useState, useEffect } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import { SeasonTimer } from '../common/SeasonTimer';
import { localDataService, type LocalUser } from '../../services/localDataService';

// –õ–æ–∫–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
const getLevelInfo = (points: number) => {
  if (points >= 10) {
    return { emoji: 'üß†', title: '–ú–∞—Å—Ç–µ—Ä', color: 'text-purple-600' };
  }
  if (points >= 5) {
    return { emoji: 'üõ†Ô∏è', title: '–ë–æ–µ—Ü', color: 'text-blue-600' };
  }
  return { emoji: 'üèÅ', title: '–ù–æ–≤–∏—á–æ–∫', color: 'text-green-600' };
};

const HomePage: React.FC = () => {
  const { currentUser } = useAuth();
  const [currentTime, setCurrentTime] = useState(new Date());
  const [userStats, setUserStats] = useState<{
    totalPoints: number;
    totalProblems: number;
    rank: number;
    level: ReturnType<typeof getLevelInfo>;
    fullName: string;
  } | null>(null);
  const [loading, setLoading] = useState(true);
  const [seasonReport, setSeasonReport] = useState<any>(null);

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentTime(new Date());
    }, 1000);

    return () => clearInterval(timer);
  }, []);

  useEffect(() => {
    if (currentUser) {
      loadUserStats();
    } else {
      setLoading(false);
    }
    loadSeasonReport();
  }, [currentUser]);

  const loadUserStats = async () => {
    if (!currentUser) return;

    try {
      setLoading(true);

      // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –§–ò–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const displayName = await localDataService.getUserDisplayName(
        currentUser.uid, 
        currentUser.email || ''
      );

      // –°–Ω–∞—á–∞–ª–∞ —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ
      await localDataService.saveUser({
        id: currentUser.uid,
        email: currentUser.email || '',
        fullName: displayName,
        joinedAt: new Date().toISOString(),
        lastActive: new Date().toISOString(),
      });

      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userData = await localDataService.getUser(currentUser.uid);
      
      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–∞
      const leaderboard = await localDataService.getLeaderboard();
      const userRank = leaderboard.findIndex(user => user.id === currentUser.uid) + 1;

      if (userData) {
        const levelInfo = getLevelInfo(userData.totalPoints);
        setUserStats({
          totalPoints: userData.totalPoints,
          totalProblems: userData.totalProblems,
          rank: userRank || leaderboard.length + 1,
          level: levelInfo,
          fullName: userData.fullName
        });
      } else {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const levelInfo = getLevelInfo(0);
        setUserStats({
          totalPoints: 0,
          totalProblems: 0,
          rank: leaderboard.length + 1,
          level: levelInfo,
          fullName: displayName
        });
      }

      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      const levelInfo = getLevelInfo(0);
      setUserStats({
        totalPoints: 0,
        totalProblems: 0,
        rank: 1,
        level: levelInfo,
        fullName: currentUser.email?.split('@')[0] || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
      });
    } finally {
      setLoading(false);
    }
  };

  const loadSeasonReport = async () => {
    try {
      const report = await localDataService.getSeasonReport();
      setSeasonReport(report);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞ —Å–µ–∑–æ–Ω–∞:', error);
    }
  };

  const formatTime = (date: Date) => {
    return date.toLocaleTimeString('ru-RU', {
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit'
    });
  };

  const formatDate = (date: Date) => {
    return date.toLocaleDateString('ru-RU', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  };

  return (
    <div className="max-w-7xl mx-auto px-4 py-4 sm:py-8">
      {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
      <div className="text-center mb-6 sm:mb-8">
        <div className="text-4xl sm:text-6xl mb-4">üëã</div>
        <h1 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-2">
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –ü–ù–†!
        </h1>
        <p className="text-gray-600 text-sm sm:text-base max-w-2xl mx-auto">
          –°–∏—Å—Ç–µ–º–∞ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ. 
          –ù–∞—Ö–æ–¥–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ–ª—É—á–∞–π—Ç–µ –±–∞–ª–ª—ã, –ø–æ–¥–Ω–∏–º–∞–π—Ç–µ—Å—å –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ!
        </p>
        
        {/* –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è */}
        <div className="mt-4 p-3 bg-blue-50 rounded-lg inline-block">
          <div className="text-xs sm:text-sm text-blue-600 font-medium">
            {formatDate(currentTime)}
          </div>
          <div className="text-lg sm:text-2xl font-bold text-blue-800">
            {formatTime(currentTime)}
          </div>
        </div>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      {currentUser && (
        <div className="mb-6 sm:mb-8">
          <h2 className="text-lg sm:text-xl font-semibold text-gray-900 mb-4 text-center">
            üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
          </h2>
          
          {loading ? (
            <div className="text-center py-8">
              <div className="animate-spin h-8 w-8 border-2 border-blue-600 border-t-transparent rounded-full mx-auto mb-4"></div>
              <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</p>
            </div>
          ) : userStats ? (
            <div className="grid grid-cols-2 sm:grid-cols-4 gap-3 sm:gap-4">
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-3 sm:p-4 text-center">
                <div className="text-2xl sm:text-3xl font-bold text-blue-600">
                  {userStats.totalPoints}
                </div>
                <div className="text-xs sm:text-sm text-gray-600 mt-1">
                  –ë–∞–ª–ª–æ–≤
                </div>
              </div>
              
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-3 sm:p-4 text-center">
                <div className="text-2xl sm:text-3xl font-bold text-green-600">
                  {userStats.totalProblems}
                </div>
                <div className="text-xs sm:text-sm text-gray-600 mt-1">
                  –ü—Ä–æ–±–ª–µ–º
                </div>
              </div>
              
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-3 sm:p-4 text-center">
                <div className="text-2xl sm:text-3xl font-bold text-purple-600">
                  #{userStats.rank}
                </div>
                <div className="text-xs sm:text-sm text-gray-600 mt-1">
                  –ú–µ—Å—Ç–æ
                </div>
              </div>
              
              <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-3 sm:p-4 text-center">
                <div className="text-2xl sm:text-3xl">
                  {userStats.level.emoji}
                </div>
                <div className="text-xs sm:text-sm text-gray-600 mt-1">
                  {userStats.level.title}
                </div>
              </div>
            </div>
          ) : (
            <div className="text-center py-8">
              <p className="text-gray-600">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</p>
              <button 
                onClick={loadUserStats}
                className="mt-2 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg"
              >
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </div>
          )}

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ */}
          {currentUser && userStats && (
            <div className="mt-4 p-4 bg-green-50 border border-green-200 rounded-lg">
              <div className="flex items-start space-x-3">
                <span className="text-2xl">üë§</span>
                <div>
                  <h3 className="font-semibold text-green-800">–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</h3>
                  <p className="text-sm text-green-600">
                    <strong>–ò–º—è:</strong> {userStats ? userStats.fullName : (currentUser.displayName || currentUser.email || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')}<br />
                    <strong>Email:</strong> {currentUser.email}<br />
                    <strong>–£—Ä–æ–≤–µ–Ω—å:</strong> {userStats.level.emoji} {userStats.level.title}<br />
                    <strong>–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤:</strong> /Users/mike/Desktop/quiz/problem-tracker-data/
                  </p>
                </div>
              </div>
            </div>
          )}
        </div>
      )}

      {/* –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */}
      {currentUser && (
        <div className="mb-6 sm:mb-8 text-center">
          <div className="flex flex-col sm:flex-row gap-3 justify-center">
            <button
              onClick={loadUserStats}
              className="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors"
            >
              üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            </button>
            <button
              onClick={() => localDataService.fixUserNames()}
              className="bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-lg transition-colors"
            >
              ‚úèÔ∏è –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∏–º–µ–Ω–∞
            </button>
          </div>
        </div>
      )}

      {/* –¢–∞–π–º–µ—Ä —Å–µ–∑–æ–Ω–∞ */}
      <div className="mb-6 sm:mb-8">
        <SeasonTimer />
      </div>

      {/* –û—Ç—á–µ—Ç –æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–º —Å–µ–∑–æ–Ω–µ */}
      {seasonReport && (
        <div className="mb-6 sm:mb-8">
          <div className="bg-gradient-to-r from-yellow-50 to-orange-50 border-2 border-yellow-300 rounded-lg p-6">
            <div className="text-center mb-6">
              <div className="text-6xl mb-4">üèÜ</div>
              <h2 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-2">
                –ò—Ç–æ–≥–∏ –∏–≥—Ä—ã "{seasonReport.seasonName}"
              </h2>
              <p className="text-gray-600">
                {new Date(seasonReport.startDate).toLocaleDateString('ru-RU')} - {new Date(seasonReport.endDate).toLocaleDateString('ru-RU')}
              </p>
            </div>

            {/* –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <div className="grid grid-cols-2 sm:grid-cols-4 gap-4 mb-6">
              <div className="bg-white rounded-lg p-4 text-center shadow-sm">
                <div className="text-2xl font-bold text-blue-600">{seasonReport.totalParticipants}</div>
                <div className="text-sm text-gray-600">–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤</div>
              </div>
              <div className="bg-white rounded-lg p-4 text-center shadow-sm">
                <div className="text-2xl font-bold text-green-600">{seasonReport.totalProblems}</div>
                <div className="text-sm text-gray-600">–ü—Ä–æ–±–ª–µ–º –Ω–∞–π–¥–µ–Ω–æ</div>
              </div>
              <div className="bg-white rounded-lg p-4 text-center shadow-sm">
                <div className="text-2xl font-bold text-purple-600">{seasonReport.totalPoints}</div>
                <div className="text-sm text-gray-600">–ë–∞–ª–ª–æ–≤ –Ω–∞—á–∏—Å–ª–µ–Ω–æ</div>
              </div>
              <div className="bg-white rounded-lg p-4 text-center shadow-sm">
                <div className="text-2xl font-bold text-orange-600">
                  {Math.round(seasonReport.totalProblems / seasonReport.totalParticipants * 10) / 10}
                </div>
                <div className="text-sm text-gray-600">–°—Ä–µ–¥–Ω–µ–µ –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞</div>
              </div>
            </div>

            {/* –¢–æ–ø-3 –ø–æ–±–µ–¥–∏—Ç–µ–ª—è */}
            <div className="mb-6">
              <h3 className="text-xl font-semibold text-gray-900 mb-4 text-center">
                ü•á –¢–æ–ø-3 –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
              </h3>
              <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
                {seasonReport.winners.slice(0, 3).map((winner: any, index: number) => {
                  const medals = ['ü•á', 'ü•à', 'ü•â'];
                  const colors = ['bg-yellow-100 border-yellow-300', 'bg-gray-100 border-gray-300', 'bg-orange-100 border-orange-300'];
                  
                  return (
                    <div key={winner.rank} className={`bg-white rounded-lg p-4 text-center border-2 ${colors[index]} shadow-sm`}>
                      <div className="text-4xl mb-2">{medals[index]}</div>
                      <div className="font-bold text-gray-900">{winner.name}</div>
                      <div className="text-2xl font-bold text-blue-600 my-1">{winner.points}</div>
                      <div className="text-sm text-gray-600">{winner.problems} –ø—Ä–æ–±–ª–µ–º</div>
                    </div>
                  );
                })}
              </div>
            </div>

            {/* –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π */}
            {seasonReport.winners.length > 3 && (
              <div className="bg-white rounded-lg p-4">
                <h4 className="font-semibold text-gray-900 mb-3">üìä –ü–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥:</h4>
                <div className="space-y-2">
                  {seasonReport.winners.slice(3, 10).map((winner: any) => (
                    <div key={winner.rank} className="flex justify-between items-center py-2 border-b border-gray-100 last:border-b-0">
                      <div className="flex items-center space-x-3">
                        <span className="font-medium text-gray-600">#{winner.rank}</span>
                        <span className="text-gray-900">{winner.name}</span>
                      </div>
                      <div className="text-right">
                        <div className="font-bold text-blue-600">{winner.points}</div>
                        <div className="text-xs text-gray-500">{winner.problems} –ø—Ä–æ–±–ª–µ–º</div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {/* –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ */}
            <div className="mt-6 text-center">
              <p className="text-lg text-gray-700 mb-2">
                üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!
              </p>
              <p className="text-sm text-gray-600">
                –ë–ª–∞–≥–æ–¥–∞—Ä—è –≤–∞—à–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —Å—Ç–∞–ª–æ –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ
              </p>
            </div>
          </div>
        </div>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6 mb-6 sm:mb-8">
        {/* –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞ */}
        <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4 sm:p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-3 flex items-center">
            <span className="text-2xl mr-2">üéØ</span>
            –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞?
          </h3>
          <ul className="text-sm text-gray-600 space-y-2">
            <li className="flex items-start">
              <span className="text-green-500 mr-2 mt-1">‚úì</span>
              –ù–∞—Ö–æ–¥–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ
            </li>
            <li className="flex items-start">
              <span className="text-green-500 mr-2 mt-1">‚úì</span>
              –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Ñ–æ—Ç–æ
            </li>
            <li className="flex items-start">
              <span className="text-green-500 mr-2 mt-1">‚úì</span>
              –ü–æ–ª—É—á–∞–π—Ç–µ +1 –±–∞–ª–ª –∑–∞ –∫–∞–∂–¥—É—é –ø—Ä–æ–±–ª–µ–º—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            </li>
            <li className="flex items-start">
              <span className="text-green-500 mr-2 mt-1">‚úì</span>
              –ü–æ–¥–Ω–∏–º–∞–π—Ç–µ—Å—å –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —É—Ä–æ–≤–Ω–∏
            </li>
          </ul>
        </div>

        {/* –•—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ */}
        <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4 sm:p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-3 flex items-center">
            <span className="text-2xl mr-2">üíæ</span>
            –ì–¥–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ?
          </h3>
          <div className="text-sm text-gray-600 space-y-2">
            <p className="flex items-start">
              <span className="text-blue-500 mr-2 mt-1">üìÅ</span>
              –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ <strong>JSON —Ñ–∞–π–ª—ã</strong> –Ω–∞ –≤–∞—à –∫–æ–º–ø—å—é—Ç–µ—Ä
            </p>
            <p className="flex items-start">
              <span className="text-blue-500 mr-2 mt-1">üñºÔ∏è</span>
              –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø–∞–ø–∫—É <strong>uploads/</strong>
            </p>
            <p className="flex items-start">
              <span className="text-blue-500 mr-2 mt-1">‚ö°</span>
              –ë—ã—Å—Ç—Ä–∞—è —Ä–∞–±–æ—Ç–∞ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
            </p>
            <p className="flex items-start">
              <span className="text-blue-500 mr-2 mt-1">üì±</span>
              –ü–æ–ª–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –º–æ–±–∏–ª—å–Ω—ã–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏
            </p>
          </div>
        </div>
      </div>

      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–±–ª–µ–º */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4 sm:p-6 mb-6 sm:mb-8">
        <h3 className="text-lg font-semibold text-gray-900 mb-4 text-center">
          üìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–±–ª–µ–º
        </h3>
        <div className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-8 gap-3">
          {[
            { emoji: 'üîß', name: '–¢–û', color: 'bg-blue-50 text-blue-700' },
            { emoji: 'üß™', name: '–ò—Å–ø—ã—Ç–∞–Ω–∏—è', color: 'bg-green-50 text-green-700' },
            { emoji: 'üìã', name: '–ê—É–¥–∏—Ç', color: 'bg-purple-50 text-purple-700' },
            { emoji: '‚ö†Ô∏è', name: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', color: 'bg-red-50 text-red-700' },
            { emoji: '‚úÖ', name: '–ö–∞—á–µ—Å—Ç–≤–æ', color: 'bg-yellow-50 text-yellow-700' },
            { emoji: '‚öôÔ∏è', name: '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', color: 'bg-orange-50 text-orange-700' },
            { emoji: 'üîÑ', name: '–ü—Ä–æ—Ü–µ—Å—Å—ã', color: 'bg-pink-50 text-pink-700' },
            { emoji: 'üìù', name: '–î—Ä—É–≥–æ–µ', color: 'bg-gray-50 text-gray-700' },
          ].map((category, index) => (
            <div
              key={index}
              className={`p-3 rounded-lg text-center ${category.color} transition-transform hover:scale-105`}
            >
              <div className="text-2xl mb-1">{category.emoji}</div>
              <div className="text-xs font-medium">{category.name}</div>
            </div>
          ))}
        </div>
      </div>

      {/* –£—Ä–æ–≤–Ω–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4 sm:p-6">
        <h3 className="text-lg font-semibold text-gray-900 mb-4 text-center">
          üèÜ –°–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π
        </h3>
        <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
          <div className="text-center p-4 bg-gray-50 rounded-lg">
            <div className="text-3xl mb-2">üèÅ</div>
            <div className="font-semibold text-gray-800">–ù–æ–≤–∏—á–æ–∫</div>
            <div className="text-sm text-gray-600">1-4 –±–∞–ª–ª–∞</div>
            <div className="text-xs text-gray-500 mt-2">
              –ù–∞—á–∏–Ω–∞—é—â–∏–π —É—á–∞—Å—Ç–Ω–∏–∫
            </div>
          </div>
          
          <div className="text-center p-4 bg-blue-50 rounded-lg">
            <div className="text-3xl mb-2">üõ†Ô∏è</div>
            <div className="font-semibold text-blue-800">–ë–æ–µ—Ü</div>
            <div className="text-sm text-blue-600">5-9 –±–∞–ª–ª–æ–≤</div>
            <div className="text-xs text-blue-500 mt-2">
              –ê–∫—Ç–∏–≤–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫
            </div>
          </div>
          
          <div className="text-center p-4 bg-purple-50 rounded-lg">
            <div className="text-3xl mb-2">üß†</div>
            <div className="font-semibold text-purple-800">–ú–∞—Å—Ç–µ—Ä</div>
            <div className="text-sm text-purple-600">10+ –±–∞–ª–ª–æ–≤</div>
            <div className="text-xs text-purple-500 mt-2">
              –≠–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–∞—á–µ—Å—Ç–≤—É
            </div>
          </div>
        </div>
      </div>

      {/* –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é */}
      {currentUser && (
        <div className="mt-6 sm:mt-8 text-center">
          <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6 bg-gradient-to-r from-blue-50 to-purple-50 border-2 border-blue-200">
            <div className="text-4xl mb-4">üöÄ</div>
            <h3 className="text-xl font-bold text-gray-900 mb-2">
              –ì–æ—Ç–æ–≤—ã –Ω–∞–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º—É?
            </h3>
            <p className="text-gray-600 mb-4 text-sm sm:text-base">
              –ö–∞–∂–¥–∞—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –ª—É—á—à–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ!
            </p>
            <div className="text-sm text-gray-500">
              üíæ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ JSON —Ñ–∞–π–ª—ã –Ω–∞ –≤–∞—à –∫–æ–º–ø—å—é—Ç–µ—Ä
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default HomePage; 