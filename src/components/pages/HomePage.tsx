import React, { useEffect, useState } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { useAuth } from '../../contexts/AuthContext';
import { SeasonTimer } from '../common/SeasonTimer';
import { cloudDataService } from '../../services/cloudDataService';
import { getLevelInfo } from '../../types';

export function HomePage() {
  const { currentUser } = useAuth();
  const location = useLocation();
  const navigate = useNavigate();
  const [userStats, setUserStats] = useState<{
    points: number;
    problems: number;
    level: 'novice' | 'fighter' | 'master';
  }>({ points: 0, problems: 0, level: 'novice' });
  const [seasonSettings, setSeasonSettings] = useState<any>(null);

  useEffect(() => {
    if (currentUser) {
      loadUserStats();
      loadSeasonSettings();
    }
  }, [currentUser]);

  const loadUserStats = async () => {
    if (!currentUser) return;
    
    try {
      const leaderboard = await cloudDataService.getLeaderboard();
      const userEntry = leaderboard.find(entry => entry.userId === currentUser.uid);
      
      if (userEntry) {
        setUserStats({
          points: userEntry.points,
          problems: userEntry.answersCount,
          level: userEntry.level
        });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    }
  };

  const loadSeasonSettings = async () => {
    try {
      const settings = await cloudDataService.getSeasonSettings();
      setSeasonSettings(settings);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ–∑–æ–Ω–∞:', error);
    }
  };

  const levelInfo = getLevelInfo(userStats.level);

  return (
    <div className="max-w-4xl mx-auto">
      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ */}
      {location.state?.message && (
        <div className={`mb-6 p-4 rounded-lg ${
          location.state.type === 'success' 
            ? 'bg-green-50 text-green-800 border border-green-200' 
            : 'bg-red-50 text-red-800 border border-red-200'
        }`}>
          <p className="font-medium">{location.state.message}</p>
        </div>
      )}

      {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
      <div className="text-center mb-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –ü–ù–†!
        </h1>
        <p className="text-gray-600">
          –ù–∞—Ö–æ–¥–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ–ª—É—á–∞–π—Ç–µ –±–∞–ª–ª—ã, —Å–æ—Ä–µ–≤–Ω—É–π—Ç–µ—Å—å —Å –∫–æ–ª–ª–µ–≥–∞–º–∏
        </p>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      {currentUser && (
        <div className="bg-white rounded-lg shadow-md p-6 mb-8">
          <h2 className="text-xl font-semibold mb-4">–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="text-center p-4 bg-gray-50 rounded-lg">
              <div className="text-3xl font-bold text-blue-600">{userStats.points}</div>
              <div className="text-sm text-gray-600">–ë–∞–ª–ª–æ–≤</div>
            </div>
            <div className="text-center p-4 bg-gray-50 rounded-lg">
              <div className="text-3xl font-bold text-green-600">{userStats.problems}</div>
              <div className="text-sm text-gray-600">–ü—Ä–æ–±–ª–µ–º –Ω–∞–π–¥–µ–Ω–æ</div>
            </div>
            <div className="text-center p-4 bg-gray-50 rounded-lg">
              <div className="text-3xl mb-1">{levelInfo.icon}</div>
              <div className={`text-sm font-medium ${levelInfo.color}`}>{levelInfo.name}</div>
            </div>
          </div>
        </div>
      )}

      {/* –¢–∞–π–º–µ—Ä —Å–µ–∑–æ–Ω–∞ */}
      {seasonSettings && seasonSettings.isActive && (
        <SeasonTimer />
      )}

      {/* –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é */}
      <div className="bg-indigo-50 rounded-lg p-6 text-center">
        <h3 className="text-lg font-semibold text-indigo-900 mb-2">
          –ù–∞—à–ª–∏ –ø—Ä–æ–±–ª–µ–º—É?
        </h3>
        <p className="text-indigo-700 mb-4">
          –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–∞–ª–ª—ã –∑–∞ –≤–∫–ª–∞–¥ –≤ —É–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
        </p>
        <button
          onClick={() => navigate('/submit')}
          className="bg-indigo-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-indigo-700 transition-colors"
        >
          –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ
        </button>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ */}
      <div className="mt-8 grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="bg-white rounded-lg shadow p-6">
          <h3 className="font-semibold text-gray-900 mb-3">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</h3>
          <ol className="space-y-2 text-sm text-gray-600">
            <li>1. –û–±–Ω–∞—Ä—É–∂—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ</li>
            <li>2. –°–¥–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ –∏ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É</li>
            <li>3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É</li>
            <li>4. –ü–æ–ª—É—á–∏—Ç–µ –±–∞–ª–ª—ã –∏ —Å–æ—Ä–µ–≤–Ω—É–π—Ç–µ—Å—å —Å –∫–æ–ª–ª–µ–≥–∞–º–∏</li>
          </ol>
        </div>
        
        <div className="bg-white rounded-lg shadow p-6">
          <h3 className="font-semibold text-gray-900 mb-3">–°–∏—Å—Ç–µ–º–∞ –±–∞–ª–ª–æ–≤</h3>
          <ul className="space-y-2 text-sm text-gray-600">
            <li>‚Ä¢ –ó–∞ –∫–∞–∂–¥—É—é –ø—Ä–æ–±–ª–µ–º—É: <span className="font-medium">+1 –±–∞–ª–ª</span></li>
            <li>‚Ä¢ –ë–æ–Ω—É—Å –æ—Ç –∞–¥–º–∏–Ω–∞: <span className="font-medium">–¥–æ +10 –±–∞–ª–ª–æ–≤</span></li>
            <li>‚Ä¢ üèÅ –ù–æ–≤–∏—á–æ–∫: 1-4 –±–∞–ª–ª–∞</li>
            <li>‚Ä¢ üõ†Ô∏è –ë–æ–µ—Ü: 5-9 –±–∞–ª–ª–æ–≤</li>
            <li>‚Ä¢ üß† –ú–∞—Å—Ç–µ—Ä: 10+ –±–∞–ª–ª–æ–≤</li>
          </ul>
        </div>
      </div>
    </div>
  );
} 