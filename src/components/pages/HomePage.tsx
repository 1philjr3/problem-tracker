import React, { useState, useEffect } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import { cloudDataService, type LocalUser } from '../../services/cloudDataService';
import { SeasonTimer } from '../common/SeasonTimer';

const HomePage: React.FC = () => {
  const { currentUser } = useAuth();
  const [currentTime, setCurrentTime] = useState(new Date());
  const [userStats, setUserStats] = useState<LocalUser | null>(null);
  const [leaderboard, setLeaderboard] = useState<LocalUser[]>([]);
  const [loading, setLoading] = useState(true);
  const [seasonReport, setSeasonReport] = useState<any>(null);

  // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentTime(new Date());
    }, 1000);

    return () => clearInterval(timer);
  }, []);

  useEffect(() => {
    if (currentUser) {
      loadData();
    } else {
      setLoading(false);
    }
  }, [currentUser]);

  useEffect(() => {
    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    const handleUpdate = () => {
      loadData();
    };

    window.addEventListener('userStatsUpdated', handleUpdate);
    return () => {
      window.removeEventListener('userStatsUpdated', handleUpdate);
    };
  }, []);

  const loadData = async () => {
    if (!currentUser) return;

    try {
      setLoading(true);

      // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const displayName = await cloudDataService.getUserDisplayName(
        currentUser.uid, 
        currentUser.email || ''
      );

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await cloudDataService.saveUser({
        id: currentUser.uid,
        email: currentUser.email || '',
        fullName: displayName,
        joinedAt: new Date().toISOString(),
        lastActive: new Date().toISOString(),
      });

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–µ–π—Ç–∏–Ω–≥
      const userData = await cloudDataService.getUser(currentUser.uid);
      const leaderboard = await cloudDataService.getLeaderboard();

      setUserStats(userData);
      setLeaderboard(leaderboard);

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    } finally {
      setLoading(false);
    }
  };

  const loadSeasonReport = async () => {
    try {
      const report = await cloudDataService.getSeasonReport();
      setSeasonReport(report);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞:', error);
    }
  };

  const getLevelInfo = (level: string) => {
    switch (level) {
      case 'novice':
        return { emoji: 'üèÅ', title: '–ù–æ–≤–∏—á–æ–∫', range: '1-4 –±–∞–ª–ª–∞', color: 'text-green-600' };
      case 'fighter':
        return { emoji: 'üõ†Ô∏è', title: '–ë–æ–µ—Ü', range: '5-9 –±–∞–ª–ª–æ–≤', color: 'text-blue-600' };
      case 'master':
        return { emoji: 'üß†', title: '–ú–∞—Å—Ç–µ—Ä', range: '10+ –±–∞–ª–ª–æ–≤', color: 'text-purple-600' };
      default:
        return { emoji: 'üèÅ', title: '–ù–æ–≤–∏—á–æ–∫', range: '1-4 –±–∞–ª–ª–∞', color: 'text-green-600' };
    }
  };

  const formatTime = (date: Date) => {
    return date.toLocaleTimeString('ru-RU', {
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit'
    });
  };

  const formatDate = (date: Date) => {
    return date.toLocaleDateString('ru-RU', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  };

  if (!currentUser) {
    return (
      <div className="text-center py-12">
        <p className="text-gray-500">–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</p>
      </div>
    );
  }

  return (
    <div className="max-w-7xl mx-auto p-6 space-y-6">
      {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
      <div className="bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg shadow-lg text-white p-6">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold mb-2">
              –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {userStats?.fullName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}! üëã
            </h1>
            <p className="text-blue-100">
              –°–∏—Å—Ç–µ–º–∞ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ
            </p>
          </div>
          <div className="text-6xl opacity-20">
            üè≠
          </div>
        </div>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      {loading ? (
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          {[1, 2, 3].map(i => (
            <div key={i} className="bg-white rounded-lg shadow p-6 animate-pulse">
              <div className="h-4 bg-gray-200 rounded w-3/4 mb-2"></div>
              <div className="h-8 bg-gray-200 rounded w-1/2"></div>
            </div>
          ))}
        </div>
      ) : userStats ? (
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          {/* –£—Ä–æ–≤–µ–Ω—å */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <div className="flex items-center">
              <div className="text-4xl mr-4">
                {getLevelInfo(userStats.level).emoji}
              </div>
              <div>
                <h3 className="text-lg font-semibold text-gray-900">
                  {getLevelInfo(userStats.level).title}
                </h3>
                <p className="text-sm text-gray-500">
                  {getLevelInfo(userStats.level).range}
                </p>
              </div>
            </div>
          </div>

          {/* –ë–∞–ª–ª—ã */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <div className="flex items-center">
              <div className="text-4xl mr-4">üíé</div>
              <div>
                <h3 className="text-2xl font-bold text-gray-900">
                  {userStats.totalPoints}
                </h3>
                <p className="text-sm text-gray-500">–û–±—â–∏–π —Å—á–µ—Ç</p>
              </div>
            </div>
          </div>

          {/* –ü—Ä–æ–±–ª–µ–º—ã */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <div className="flex items-center">
              <div className="text-4xl mr-4">üìù</div>
              <div>
                <h3 className="text-2xl font-bold text-gray-900">
                  {userStats.totalProblems}
                </h3>
                <p className="text-sm text-gray-500">–°–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ</p>
              </div>
            </div>
          </div>
        </div>
      ) : null}

      {/* –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è */}
      <div className="text-center">
        <div className="text-xs sm:text-sm text-blue-600 font-medium">
          {formatDate(currentTime)}
        </div>
        <div className="text-lg sm:text-2xl font-bold text-blue-800">
          {formatTime(currentTime)}
        </div>
      </div>

      {/* –¢–∞–π–º–µ—Ä —Å–µ–∑–æ–Ω–∞ */}
      <SeasonTimer />

      {/* –¢–æ–ø-5 —Ä–µ–π—Ç–∏–Ω–≥–∞ */}
      <div className="bg-white rounded-lg shadow-lg p-6">
        <div className="flex items-center justify-between mb-6">
          <h2 className="text-xl font-bold text-gray-900">üèÜ –¢–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</h2>
          <button
            onClick={loadData}
            className="text-blue-600 hover:text-blue-800 text-sm"
          >
            –û–±–Ω–æ–≤–∏—Ç—å
          </button>
        </div>

        {leaderboard.length === 0 ? (
          <p className="text-gray-500 text-center py-8">
            –ü–æ–∫–∞ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ
          </p>
        ) : (
          <div className="space-y-3">
            {leaderboard.slice(0, 5).map((user, index) => {
              const levelInfo = getLevelInfo(user.level);
              return (
                <div
                  key={user.id}
                  className={`flex items-center justify-between p-3 rounded-lg ${
                    index === 0 ? 'bg-yellow-50 border border-yellow-200' :
                    index === 1 ? 'bg-gray-50 border border-gray-200' :
                    index === 2 ? 'bg-orange-50 border border-orange-200' :
                    'bg-gray-50'
                  }`}
                >
                  <div className="flex items-center space-x-3">
                    <span className="text-lg font-bold text-gray-600 w-6">
                      #{index + 1}
                    </span>
                    <span className="text-2xl">
                      {index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' : levelInfo.emoji}
                    </span>
                    <div>
                      <p className="font-medium text-gray-900">{user.fullName}</p>
                      <p className="text-sm text-gray-500">
                        {levelInfo.title} ‚Ä¢ {user.totalProblems} —Å–æ–æ–±—â–µ–Ω–∏–π
                      </p>
                    </div>
                  </div>
                  <div className="text-right">
                    <p className="text-lg font-bold text-gray-900">{user.totalPoints}</p>
                    <p className="text-xs text-gray-500">–±–∞–ª–ª–æ–≤</p>
                  </div>
                </div>
              );
            })}
          </div>
        )}
      </div>

      {/* –û—Ç—á–µ—Ç –ø–æ —Å–µ–∑–æ–Ω—É */}
      <div className="bg-white rounded-lg shadow-lg p-6">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-bold text-gray-900">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ–∑–æ–Ω–∞</h2>
          <button
            onClick={loadSeasonReport}
            className="text-blue-600 hover:text-blue-800 text-sm"
          >
            –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç
          </button>
        </div>

        {seasonReport ? (
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <div className="text-center">
              <div className="text-2xl font-bold text-blue-600">
                {seasonReport.totalParticipants}
              </div>
              <div className="text-sm text-gray-500">–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-green-600">
                {seasonReport.totalProblems}
              </div>
              <div className="text-sm text-gray-500">–ü—Ä–æ–±–ª–µ–º</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-purple-600">
                {Object.keys(seasonReport.categoriesStats || {}).length}
              </div>
              <div className="text-sm text-gray-500">–ö–∞—Ç–µ–≥–æ—Ä–∏–π</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-orange-600">
                {seasonReport.topUsers?.[0]?.totalPoints || 0}
              </div>
              <div className="text-sm text-gray-500">–ú–∞–∫—Å –±–∞–ª–ª–æ–≤</div>
            </div>
          </div>
        ) : (
          <p className="text-gray-500 text-center py-4">
            –ù–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
          </p>
        )}
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ */}
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
        <h3 className="font-semibold text-blue-900 mb-3">‚ÑπÔ∏è –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞:</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-blue-800">
          <div>
            <h4 className="font-medium mb-2">üéØ –ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è:</h4>
            <ul className="space-y-1">
              <li>‚Ä¢ +1 –±–∞–ª–ª –∑–∞ –∫–∞–∂–¥—É—é –ø—Ä–æ–±–ª–µ–º—É</li>
              <li>‚Ä¢ –î–æ +10 –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤ –æ—Ç –∞–¥–º–∏–Ω–∞</li>
              <li>‚Ä¢ 3 —É—Ä–æ–≤–Ω—è: –ù–æ–≤–∏—á–æ–∫ ‚Üí –ë–æ–µ—Ü ‚Üí –ú–∞—Å—Ç–µ—Ä</li>
            </ul>
          </div>
          <div>
            <h4 className="font-medium mb-2">‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ:</h4>
            <ul className="space-y-1">
              <li>‚Ä¢ –î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è –º–µ–∂–¥—É –≤—Å–µ–º–∏</li>
              <li>‚Ä¢ –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –¥–ª—è –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</li>
              <li>‚Ä¢ –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–∏—Å—Ç–µ–º–æ–π</li>
            </ul>
          </div>
        </div>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="bg-white rounded-lg shadow-lg p-6">
        <h2 className="text-xl font-bold text-gray-900 mb-4">‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <button
            onClick={() => window.location.hash = '#/submit'}
            className="p-4 bg-blue-50 hover:bg-blue-100 rounded-lg border border-blue-200 transition-colors"
          >
            <div className="text-2xl mb-2">üìù</div>
            <div className="font-medium text-blue-900">–°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ</div>
            <div className="text-sm text-blue-600">–ü–æ–ª—É—á–∏—Ç—å +1 –±–∞–ª–ª</div>
          </button>
          
          <button
            onClick={() => window.location.hash = '#/leaderboard'}
            className="p-4 bg-green-50 hover:bg-green-100 rounded-lg border border-green-200 transition-colors"
          >
            <div className="text-2xl mb-2">üèÜ</div>
            <div className="font-medium text-green-900">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–π—Ç–∏–Ω–≥</div>
            <div className="text-sm text-green-600">–£–∑–Ω–∞—Ç—å —Å–≤–æ—é –ø–æ–∑–∏—Ü–∏—é</div>
          </button>
        </div>
      </div>
    </div>
  );
};

export default HomePage; 