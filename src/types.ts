// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
export interface User {
  id: string;
  email: string;
  fullName: string;
  points: number;
  level: UserLevel;
  answersCount: number;
  createdAt: Date;
  isAdmin?: boolean;
}

// –£—Ä–æ–≤–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export type UserLevel = 'novice' | 'fighter' | 'master';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –æ—Ç–≤–µ—Ç–æ–≤
export const getUserLevel = (answersCount: number): UserLevel => {
  if (answersCount >= 10) return 'master';
  if (answersCount >= 5) return 'fighter';
  return 'novice';
};

// –≠–º–æ–¥–∑–∏ –¥–ª—è —É—Ä–æ–≤–Ω–µ–π
export const levelEmojis: Record<UserLevel, string> = {
  novice: 'üèÅ',
  fighter: 'üõ†Ô∏è',
  master: 'üß†'
};

// –ù–∞–∑–≤–∞–Ω–∏—è —É—Ä–æ–≤–Ω–µ–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º
export const levelNames: Record<UserLevel, string> = {
  novice: '–ù–æ–≤–∏—á–æ–∫',
  fighter: '–ë–æ–µ—Ü',
  master: '–ú–∞—Å—Ç–µ—Ä'
};

// –ü—Ä–æ–±–ª–µ–º–∞/–∫–µ–π—Å
export interface Problem {
  id: string;
  title: string;
  details: string;
  category: ProblemCategory;
  authorId: string;
  authorName: string;
  createdAt: Date;
  imageUrl?: string;
  bonusPoints?: number; // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∞–ª–ª—ã –æ—Ç –∞–¥–º–∏–Ω–∞
}

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–±–ª–µ–º
export type ProblemCategory = 'maintenance' | 'testing' | 'audit' | 'safety' | 'quality' | 'other';

// –ù–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º
export const categoryNames: Record<ProblemCategory, string> = {
  maintenance: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
  testing: '–ò—Å–ø—ã—Ç–∞–Ω–∏—è',
  audit: '–ê—É–¥–∏—Ç',
  safety: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
  quality: '–ö–∞—á–µ—Å—Ç–≤–æ',
  other: '–î—Ä—É–≥–æ–µ'
};

// –°–µ–∑–æ–Ω
export interface Season {
  id: string;
  name: string;
  startDate: Date;
  endDate: Date;
  isActive: boolean;
  createdBy: string;
}

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞
export interface LeaderboardEntry {
  userId: string;
  fullName: string;
  points: number;
  answersCount: number;
  level: UserLevel;
  position: number;
}

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export interface UserStats {
  totalPoints: number;
  totalAnswers: number;
  currentLevel: UserLevel;
  problemsByCategory: Record<ProblemCategory, number>;
  pointsHistory: PointsHistoryEntry[];
}

// –ò—Å—Ç–æ—Ä–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤
export interface PointsHistoryEntry {
  id: string;
  userId: string;
  points: number;
  reason: string;
  createdAt: Date;
  type: 'problem_submitted' | 'admin_bonus';
} 