rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Функция проверки авторизации
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Функция проверки админа
    function isAdmin() {
      return isSignedIn() && request.auth.token.email == 'admin@mail.ru';
    }
    
    // Функция проверки владельца документа
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    // Правила для пользователей
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Правила для проблем
    match /problems/{problemId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isAdmin() || (isSignedIn() && resource.data.authorId == request.auth.uid);
      allow delete: if isAdmin();
    }
    
    // Правила для настроек
    match /settings/{settingId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // Правила для сезонов
    match /seasons/{seasonId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // История баллов
    match /pointsHistory/{historyId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
} 